{"version":3,"sources":["services/HttpCommon.js","services/DataService.js","components/DashboardItem.js","components/Dashboard.js","components/Sidebar.js","components/Topbar.js","components/VASReportCriteria.js","components/Pagination.js","helper/Paginate.js","components/VASReportResult.js","components/VASReport.js","components/VASMngmtReport.js","components/DestnAddrMapListCriteria.js","components/DestnAddrMapListResult.js","components/DestnAddrMapList.js","components/DestnAddrMapEdit.js","components/DestnAddrMapAdd.js","components/UserListCriteria.js","components/UserListResult.js","components/UserList.js","components/UserEdit.js","components/UserAdd.js","components/Login.js","components/UserChangePwd.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","UserLogin","q","a","http","post","GetUser","GetUserById","id","get","CreateUser","UpdateUser","ChangePasswordUser","DeleteUser","delete","GetDestnAddrMap","GetDestnAddrMapById","CreateDestnAddrMap","UpdateDestnAddrMap","DeleteDestnAddrMap","GetReport","vasType","GetMngmtReport","GetDashboardReport1","DashboardItem","state","query","props","year","Date","getFullYear","toString","data","labels","datasets","backgroundColor","hoverBackgroundColor","rawData","GetUSSDDashboardReport1","DataService","response","console","log","setState","map","destinationAddress","totalCount","this","Fragment","className","scope","index","key","Component","Dashboard","Sidebar","to","src","alt","width","height","loggedUser","userId","userGroup","Topbar","onLogoutClicked","userName","onClick","VASReportCriteria","onOriginationAddressChange","onDestinationAddressChange","onStartDateChange","onEndDateChange","onMessageStatusChange","onSubmitQuery","onCancelClicked","destnAddrMap","onSubmit","htmlFor","type","name","value","originationAddress","onChange","mode","defaultValue","i","destnAddrId","destnAddrValue","destnAddrName","startDate","endDate","messageStatus","Pagination","totalItems","activePage","pageSize","onPageChange","startPage","endPage","currentPage","maxPages","totalPages","Math","ceil","maxPagesBeforeCurrentPage","floor","maxPagesAfterCurrentPage","startIndex","endIndex","min","pages","Array","from","keys","Paginate","length","aria-label","page","VASReportResult","list","find","b","undefined","pageIndex","onPageSizeChange","Number","toLocaleString","idx","transactionId","deliveryTimeText","findAddrName","VASReport","result","initData","destnAddrType","filter","destnAddrStatus","fetchGetReport","pageNumber","handleOriginationAddressChange","e","target","handleOnDestinationAddressChange","handleOnStartDateChange","handleOnEndDateChange","handleOnMessageStatusChange","parseInt","handleOnPageSizeChange","handleOnSubmitQuery","preventDefault","handleOnCancelClicked","handleOnPageChange","VASMngmtReport","fetchGetMngmtReport","obj","handleOnYearChange","required","month","successCount","failCount","DestnAddrMapListCriteria","onNameChange","onValueChange","onStatusChange","DestnAddrMapListResult","method","asp-action","DestnAddrMapList","handleOnDestnAddrNameChange","handleOnDestnAddrValueChange","handleOnStatusChange","DestnAddrMapEdit","createdDate","createdBy","updatedDate","updatedBy","message","match","params","history","push","onSubmitData","DestnAddrMapAdd","UserListCriteria","onUserNameChange","onUserGroupChange","onUserStatusChange","userStatus","UserListResult","UserList","handleOnUserNameChange","handleOnUserGroupChange","handleOnUserStatusChange","requiredRole","UserEdit","userType","UserAdd","password","onPasswordChange","Login","showPassword","togglePassword","onSubmitLogin","onUserNameChanged","onPasswordChanged","loginResult","style","margin","UserChangePwd","nextProps","App","localStorage","getItem","login","setItem","logout","removeItem","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"sOAEeA,E,OAAAA,EAAMC,OAAO,CAM1BC,QAAS,wDACTC,QAAS,CAAE,eAAgB,sBC4Cd,M,sCAlDbC,U,uCAAY,WAAOC,GAAP,SAAAC,EAAA,+EACHC,EAAKC,KAAK,cAAeH,IADtB,2C,2DAIZI,Q,uCAAU,WAAOJ,GAAP,SAAAC,EAAA,+EACDC,EAAKC,KAAK,iBAAkBH,IAD3B,2C,2DAGVK,Y,uCAAc,WAAOC,GAAP,SAAAL,EAAA,+EACLC,EAAKK,IAAL,wBAA0BD,KADrB,2C,2DAGdE,W,uCAAa,WAAOR,GAAP,SAAAC,EAAA,+EACJC,EAAKC,KAAK,eAAgBH,IADtB,2C,2DAGbS,W,uCAAa,WAAOT,GAAP,SAAAC,EAAA,+EACJC,EAAKC,KAAK,eAAgBH,IADtB,2C,2DAGbU,mB,uCAAqB,WAAOV,GAAP,SAAAC,EAAA,+EACZC,EAAKC,KAAK,uBAAwBH,IADtB,2C,2DAGrBW,W,uCAAa,WAAOL,GAAP,SAAAL,EAAA,+EACJC,EAAKU,OAAL,uBAA4BN,KADxB,2C,2DAIbO,gB,uCAAkB,WAAOb,GAAP,SAAAC,EAAA,+EACTC,EAAKC,KAAK,iCAAkCH,IADnC,2C,2DAGlBc,oB,uCAAsB,WAAOR,GAAP,SAAAL,EAAA,+EACbC,EAAKK,IAAL,yCAA2CD,KAD9B,2C,2DAGtBS,mB,uCAAqB,WAAOf,GAAP,SAAAC,EAAA,+EACZC,EAAKC,KAAK,oCAAqCH,IADnC,2C,2DAGrBgB,mB,uCAAqB,WAAOhB,GAAP,SAAAC,EAAA,+EACZC,EAAKC,KAAK,oCAAqCH,IADnC,2C,2DAGrBiB,mB,uCAAqB,WAAOX,GAAP,SAAAL,EAAA,+EACZC,EAAKU,OAAL,4CAAiDN,KADrC,2C,2DAIrBY,U,uCAAY,WAAOlB,GAAP,SAAAC,EAAA,+EACHC,EAAKC,KAAL,WAAcH,EAAEmB,QAAhB,cAAqCnB,IADlC,2C,2DAGZoB,e,uCAAiB,WAAOpB,GAAP,SAAAC,EAAA,+EACRC,EAAKC,KAAL,WAAcH,EAAEmB,QAAhB,mBAA0CnB,IADlC,2C,2DAGjBqB,oB,uCAAsB,WAAOrB,GAAP,SAAAC,EAAA,+EACbC,EAAKC,KAAL,WAAcH,EAAEmB,QAAhB,wBAA+CnB,IADlC,2C,+DCqETsB,E,4MAhHbC,MAAQ,CACNC,MAAO,CACLL,QAAS,EAAKM,MAAMN,QACpBO,MAAM,IAAIC,MAAOC,cAAcC,YAGjCC,KAAM,CACJC,OAAQ,GACRC,SAAU,CACR,CACEF,KAAM,GACNG,gBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,qBAAsB,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,cAMRC,QAAS,I,EAOXC,wB,sBAA0B,8BAAAnC,EAAA,6DAChBuB,EAAU,EAAKD,MAAfC,MADgB,kBAIDa,EAAYhB,oBAAoBG,GAJ/B,OAIlBc,EAJkB,OAKtBC,QAAQC,IAAI,WAAYF,GAExB,EAAKG,SAAS,CACZX,KAAM,CACJC,OAAQO,EAASR,KAAKY,KAAI,SAACzC,GAAD,OAAOA,EAAE0C,sBACnCX,SAAU,CACR,CACEF,KAAMQ,EAASR,KAAKY,KAAI,SAACzC,GAAD,OAAOA,EAAE2C,iBAIvCT,QAASG,EAASR,OAhBE,gDAmBtBS,QAAQC,IAAR,MAnBsB,yD,kEAHxBK,KAAKT,4B,+BA2BL,OACE,kBAAC,IAAMU,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eAAf,aAAwCF,KAAKpB,MAAMN,SACnD,yBAAK4B,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,kBAAC,IAAD,CAAKjB,KAAMe,KAAKtB,MAAMO,QAExB,yBAAKiB,UAAU,OACb,2BACEA,UAAU,+BACVzC,GAAG,cAEH,+BACE,4BACE,wBAAI0C,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,iBAGJ,+BACGH,KAAKtB,MAAMY,QAAQO,KAAI,SAACzC,EAAGgD,GAAJ,OACtB,wBAAIC,IAAKjD,EAAE0C,oBACT,4BAAK1C,EAAE0C,oBACP,4BAAK1C,EAAE2C,4B,GAlGLO,aCiBbC,E,uKAhBX,OACE,kBAAC,IAAMN,SAAP,KACE,kBAAC,EAAD,CAAe3B,QAAQ,SAEvB,yBAAK4B,UAAU,SAEf,kBAAC,EAAD,CAAe5B,QAAQ,QAEvB,yBAAK4B,UAAU,SAEf,kBAAC,EAAD,CAAe5B,QAAQ,a,GAZPgC,aCwJTE,E,4MAvJb9B,MAAQ,G,uDAEN,OACE,kBAAC,IAAMuB,SAAP,KACE,wBACEC,UAAU,gEACVzC,GAAG,oBAEH,kBAAC,IAAD,CACEgD,GAAG,IACHP,UAAU,kEAEV,yBAAKA,UAAU,sBACb,yBACEQ,IAAI,+BACJC,IAAI,MACJC,MAAM,KACNC,OAAO,QAGX,yBAAKX,UAAU,2BAAf,eAGF,wBAAIA,UAAU,yBAEd,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,cAC/B,uBAAGP,UAAU,gCACb,6CAIJ,wBAAIA,UAAU,oBAEd,yBAAKA,UAAU,mBAAf,eAEA,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,eAC/B,uBAAGP,UAAU,uBACb,+CAGJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,qBAC/B,uBAAGP,UAAU,uBACb,sDAIJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,oBAC/B,uBAAGP,UAAU,4BACb,0DAGJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,sBAC/B,uBAAGP,UAAU,qBACb,4DAIJ,wBAAIA,UAAU,oBAEd,yBAAKA,UAAU,mBAAf,cAEA,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,cAC/B,uBAAGP,UAAU,uBACb,8CAGJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,oBAC/B,uBAAGP,UAAU,uBACb,qDAIJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,mBAC/B,uBAAGP,UAAU,4BACb,yDAGJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,qBAC/B,uBAAGP,UAAU,qBACb,2DAIJ,wBAAIA,UAAU,oBAEd,yBAAKA,UAAU,mBAAf,cAEA,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,cAC/B,uBAAGP,UAAU,uBACb,8CAGJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,oBAC/B,uBAAGP,UAAU,uBACb,qDAIJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,mBAC/B,uBAAGP,UAAU,4BACb,yDAGJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,qBAC/B,uBAAGP,UAAU,qBACb,2DAIJ,wBAAIA,UAAU,oBAEd,yBAAKA,UAAU,mBAAf,iBACA,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CACEA,UAAU,WACVO,GAAE,yBAAoBT,KAAKpB,MAAMkC,WAAWC,SAE5C,uBAAGb,UAAU,uBACb,mDAIiC,UAApCF,KAAKpB,MAAMkC,WAAWE,WACrB,kBAAC,IAAMf,SAAP,KACE,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWO,GAAG,UAC/B,uBAAGP,UAAU,uBACb,gD,GA7III,aCgCPW,E,4MAhCbvC,MAAQ,G,uDACE,IAAD,EACiCsB,KAAKpB,MAArCkC,EADD,EACCA,WAAYI,EADb,EACaA,gBAEpB,OACE,kBAAC,IAAMjB,SAAP,KAEE,yBAAKC,UAAU,4EACb,4BACEzC,GAAG,mBACHyC,UAAU,8CAEV,uBAAGA,UAAU,gBAGf,wBAAIA,UAAU,sBACZ,4BAAQA,UAAU,iBAChB,uBAAGA,UAAU,0CACZY,EAAWK,UAEd,4BAAQjB,UAAU,gBAAgBkB,QAASF,GACzC,uBAAGhB,UAAU,kDADf,iB,GArBSI,aC0HNe,E,uKAzHH,IAAD,EAUHrB,KAAKpB,MARPD,EAFK,EAELA,MACA2C,EAHK,EAGLA,2BACAC,EAJK,EAILA,2BACAC,EALK,EAKLA,kBACAC,EANK,EAMLA,gBACAC,EAPK,EAOLA,sBACAC,EARK,EAQLA,cACAC,EATK,EASLA,gBAGMC,EAAiB7B,KAAKpB,MAAtBiD,aAER,OACE,kBAAC,IAAM5B,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eAAf,mGACwBF,KAAKpB,MAAMN,SAEnC,yBAAK4B,UAAU,aACb,0BAAM4B,SAAUH,GACd,yBAAKzB,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,8CACA,2BACEC,KAAK,OACL9B,UAAU,eACV+B,KAAK,qBACLC,MAAOvD,EAAMwD,mBACbC,SAAUd,KAGd,yBAAKpB,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,kFAEqB,WAApB/B,KAAKpB,MAAMyD,KACV,4BACEnC,UAAU,eACVgC,MAAOvD,EAAMmB,mBACbsC,SAAUb,GAEV,4BAAQW,MAAM,GAAGI,cAAY,GAA7B,8CAGCT,EAAahC,KAAI,SAAC0C,GAAD,OAChB,4BAAQlC,IAAKkC,EAAEC,YAAaN,MAAOK,EAAEE,gBAClCF,EAAEG,mBAKT,2BACEV,KAAK,OACL9B,UAAU,eACV+B,KAAK,qBACLC,MAAOvD,EAAMmB,mBACbsC,SAAUb,MAKlB,yBAAKrB,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,aAAf,wFACA,2BACE7B,UAAU,eACV8B,KAAK,OACLE,MAAOvD,EAAMgE,UACbP,SAAUZ,KAGd,yBAAKtB,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,kFACA,2BACE7B,UAAU,eACV8B,KAAK,OACLE,MAAOvD,EAAMiE,QACbR,SAAUX,MAKhB,yBAAKvB,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,aAAf,kCACA,4BACEG,MAAOvD,EAAMkE,eAAiB,GAC9BT,SAAUV,EACVxB,UAAU,gBAEV,4BAAQgC,MAAM,IAAd,8CACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,UAGJ,yBAAKhC,UAAU,yBAEjB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,oCACb,4BAAQ8B,KAAK,SAAS9B,UAAU,mBAAhC,kCADF,YAKE,4BACE8B,KAAK,SACL9B,UAAU,oBACVkB,QAASQ,GAHX,sC,GAzGctB,a,IC4DjBwC,E,uKAzDXpD,QAAQC,IAAI,mBAAoBK,KAAKpB,OAD9B,MAGoDoB,KAAKpB,MAAxDmE,EAHD,EAGCA,WAAYC,EAHb,EAGaA,WAAYC,EAHzB,EAGyBA,SAAUC,EAHnC,EAGmCA,aAHnC,ECJJ,SACLH,GAIC,IAWGI,EAAmBC,EAdvBC,EAGA,uDAHc,EACdJ,EAEA,uDAFW,GACXK,EACA,uDADW,GAGPC,EAAaC,KAAKC,KAAKV,EAAaE,GAUxC,GAPII,EAAc,EAChBA,EAAc,EACLA,EAAcE,IACvBF,EAAcE,GAIZA,GAAcD,EAEhBH,EAAY,EACZC,EAAUG,MACL,CAEL,IAAIG,EAA4BF,KAAKG,MAAML,EAAW,GAClDM,EAA2BJ,KAAKC,KAAKH,EAAW,GAAK,EACrDD,GAAeK,GAEjBP,EAAY,EACZC,EAAUE,GACDD,EAAcO,GAA4BL,GAEnDJ,EAAYI,EAAaD,EAAW,EACpCF,EAAUG,IAGVJ,EAAYE,EAAcK,EAC1BN,EAAUC,EAAcO,GAK5B,IAAIC,GAAcR,EAAc,GAAKJ,EACjCa,EAAWN,KAAKO,IAAIF,EAAaZ,EAAW,EAAGF,EAAa,GAG5DiB,EAAQC,MAAMC,KAAKD,MAAMb,EAAU,EAAID,GAAWgB,QAAQtE,KAC5D,SAAC0C,GAAD,OAAOY,EAAYZ,KAIrB,MAAO,CACLQ,WAAYA,EACZM,YAAaA,EACbJ,SAAUA,EACVM,WAAYA,EACZJ,UAAWA,EACXC,QAASA,EACTS,WAAYA,EACZC,SAAUA,EACVE,MAAOA,GDlDoCI,CACzCrB,EACAC,EACAC,GAHMe,EALD,EAKCA,MAAOX,EALR,EAKQA,YAAaE,EALrB,EAKqBA,WAU5B,OAJA7D,QAAQC,IAAI,QAASqE,GACrBtE,QAAQC,IAAI,cAAe0D,GAC3B3D,QAAQC,IAAI,aAAc4D,GAEL,IAAjBS,EAAMK,QAAgBd,EAAa,EAAU,KAG/C,yBAAKe,aAAW,mBACd,wBAAIpE,UAAU,aAAazC,GAAG,gBAC5B,wBAAIyC,UAAU,aACZ,4BAAQA,UAAU,YAAYkB,QAAS,kBAAM8B,EAAa,KACvD,OAIJc,EAAMnE,KAAI,SAAC0E,GAAD,OACT,wBACErE,UACEqE,IAASlB,EAAc,mBAAqB,YAE9ChD,IAAKkE,GAEL,4BACErE,UAAU,YACVkB,QAAS,WACP8B,EAAaqB,KAGdA,OAKP,wBAAIrE,UAAU,aACZ,4BACEA,UAAU,YACVkB,QAAS,kBAAM8B,EAAaK,KAE3B,a,GAlDUjD,aE0FVkE,E,4MAzFb9F,MAAQ,G,2DAEK+F,EAAMvC,GACjB,IAAI/E,EAAIsH,EAAKC,MAAK,SAACC,GAAD,OAAOA,EAAElC,iBAAmBP,KAE9C,YAAU0C,IAANzH,EAAwBA,EAAEuF,cAEvB,Q,+BAGC,IAAD,OACPhD,QAAQC,IAAI,YAAaK,KAAKpB,OADvB,MAYHoB,KAAKpB,MARPK,EAJK,EAILA,KACA4C,EALK,EAKLA,aACAkB,EANK,EAMLA,WACA8B,EAPK,EAOLA,UACA5B,EARK,EAQLA,SACAM,EATK,EASLA,WACAL,EAVK,EAULA,aACA4B,EAXK,EAWLA,iBAGF,OACE,kBAAC,IAAM7E,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKzC,GAAG,eAAeyC,UAAU,OAC/B,yBAAKA,UAAU,SAAf,gEACc6E,OAAOhC,GAAYiC,iBADjC,yCAIA,yBAAK9E,UAAU,oBACb,2BAAO6B,QAAQ,aAAf,oEAEE,4BAAQG,MAAOe,GAAY,GAAIb,SAAU0C,GACvC,4BAAQ5C,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,OAPJ,+CAcJ,yBAAKhC,UAAU,SAEf,2BAAOA,UAAU,+BAA+BzC,GAAG,cACjD,+BACE,4BACE,wBAAI0C,MAAM,OAAV,iBACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,YAGJ,+BACGlB,EAAKY,KAAI,SAACzC,EAAG6H,GAAJ,OACR,wBAAI5E,IAAKjD,EAAE8H,cAAgB,IAAMD,GAC/B,4BAAK7H,EAAE+H,kBACP,4BAAK/H,EAAE+E,oBACP,4BAAK/E,EAAE0C,oBACP,4BACG,EAAKsF,aAAavD,EAAczE,EAAE0C,qBAErC,4BAAyB,IAApB1C,EAAEyF,cAAsB,UAAY,cAMjD,kBAAC,EAAD,CACEE,WAAYA,EACZC,WAAY6B,EACZ5B,SAAUA,EACVM,WAAYA,EACZL,aAAcA,W,GAjFE5C,aC4Jf+E,E,4MAzJb3G,MAAQ,CACNC,MAAO,CACLL,QAAS,EAAKM,MAAMN,QACpB6D,mBAAoB,GACpBrC,mBAAoB,GACpB6C,UAAW,GACXC,QAAS,GACTC,cAAe,KACfI,SAAU,IAEZqC,OAAQ,CACNrG,KAAM,GACN8D,WAAY,EACZQ,WAAY,EACZsB,WAAY,GAEdhD,aAAc,I,EAahB0D,S,sBAAW,8BAAAnI,EAAA,6DACHD,EAAI,CAAEqI,cAAe,EAAK5G,MAAMN,QAAS2E,SAAU,KADhD,SAEYzD,EAAYxB,gBAAgBb,GAFxC,OAELsC,EAFK,OAGT,EAAKG,SAAS,CACZiC,aAAcpC,EAASR,KAAKA,KAAKwG,QAAO,SAACrI,GAAD,OAA6B,IAAtBA,EAAEsI,qBAJ1C,2C,EAQXC,e,sBAAiB,4CAAAvI,EAAA,6DAAOwI,EAAP,+BAAoB,GAC3BjH,EAAU,EAAKD,MAAfC,OACFiH,WAAaA,EAFJ,kBAKQpG,EAAYnB,UAAUM,GAL9B,OAKTc,EALS,OAMb,EAAKG,SAAS,CAAE0F,OAAQ7F,EAASR,OANpB,kDAQbS,QAAQC,IAAR,MARa,0D,EAYjBkG,+BAAiC,SAACC,GAChCpG,QAAQC,IAAI,iCAAkCmG,EAAEC,OAAO7D,OACvD,EAAKtC,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBwD,mBAAoB2D,EAAEC,OAAO7D,W,EAI/D8D,iCAAmC,SAACF,GAClCpG,QAAQC,IAAI,mCAAoCmG,EAAEC,OAAO7D,OAEzD,EAAKtC,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBmB,mBAAoBgG,EAAEC,OAAO7D,W,EAI/D+D,wBAA0B,SAACH,GACzBpG,QAAQC,IAAI,0BAA2BmG,EAAEC,OAAO7D,OAEhD,EAAKtC,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBgE,UAAWmD,EAAEC,OAAO7D,W,EAItDgE,sBAAwB,SAACJ,GACvBpG,QAAQC,IAAI,wBAAyBmG,EAAEC,OAAO7D,OAE9C,EAAKtC,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBiE,QAASkD,EAAEC,OAAO7D,W,EAIpDiE,4BAA8B,SAACL,GAC7BpG,QAAQC,IAAI,8BAA+BmG,EAAEC,OAAO7D,OAEpD,EAAKtC,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBkE,cAAeuD,SAASN,EAAEC,OAAO7D,Y,EAInEmE,uBAAyB,SAACP,GACxBpG,QAAQC,IAAI,yBAA0BmG,EAAEC,OAAO7D,OAE/C,EAAKtC,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBsE,SAAUmD,SAASN,EAAEC,OAAO7D,Y,EAI9DoE,oBAAsB,SAACR,GACrB,EAAKH,iBACLG,EAAES,kB,EAGJC,sBAAwB,SAACV,GACvB,EAAKlG,SAAS,CACZjB,MAAO,CACLL,QAAS,EAAKM,MAAMN,QACpB6D,mBAAoB,GACpBrC,mBAAoB,GACpB6C,UAAW,GACXC,QAAS,GACTC,cAAe,S,EAKrB4D,mBAAqB,SAACb,GACpBlG,QAAQC,IAAI,uBAAwBiG,GACpC,EAAKD,eAAeC,I,kEA3FpB5F,KAAKuF,WACLvF,KAAK2F,mB,+BA8FL,OACE,kBAAC,IAAM1F,SAAP,KACE,kBAAC,EAAD,CACEtB,MAAOqB,KAAKtB,MAAMC,MAClBkD,aAAc7B,KAAKtB,MAAMmD,aACzBP,2BAA4BtB,KAAK6F,+BACjCtE,2BAA4BvB,KAAKgG,iCACjCxE,kBAAmBxB,KAAKiG,wBACxBxE,gBAAiBzB,KAAKkG,sBACtBxE,sBAAuB1B,KAAKmG,4BAC5BxE,cAAe3B,KAAKsG,oBACpB1E,gBAAiB5B,KAAKwG,sBACtBnE,KAAMrC,KAAKpB,MAAMyD,KACjB/D,QAAS0B,KAAKpB,MAAMN,UAGtB,yBAAK4B,UAAU,SAEf,kBAAC,EAAD,CACEjB,KAAMe,KAAKtB,MAAM4G,OAAOrG,KACxB4C,aAAc7B,KAAKtB,MAAMmD,aACzBkB,WAAY/C,KAAKtB,MAAM4G,OAAOvC,WAC9B8B,UAAW7E,KAAKtB,MAAM4G,OAAOT,UAC7B5B,SAAUjD,KAAKtB,MAAMC,MAAMsE,SAC3BM,WAAYvD,KAAKtB,MAAM4G,OAAO/B,WAC9BL,aAAclD,KAAKyG,mBACnB3B,iBAAkB9E,KAAKqG,8B,GAnJT/F,aCyKToG,E,4MA1KbhI,MAAQ,CACNmD,aAAc,GACdlD,MAAO,CACLL,QAAS,EAAKM,MAAMN,QACpBO,MAAM,IAAIC,MAAOC,cAAcC,WAC/Bc,mBAAoB,IAEtBwF,OAAQ,CACNxF,mBAAoB,GACpBb,KAAM,K,EAQVsG,S,sBAAW,gCAAAnI,EAAA,6DACHD,EAAI,CAAEqI,cAAe,EAAK5G,MAAMN,QAAS2E,SAAU,KADhD,SAEYzD,EAAYxB,gBAAgBb,GAFxC,OAELsC,EAFK,OAGLR,EAAOQ,EAASR,KAAKA,KAAKwG,QAAO,SAACrI,GAAD,OAA6B,IAAtBA,EAAEsI,mBAE9C,EAAK9F,SAAS,CAAEiC,aAAc5C,IALrB,2C,EAQX0H,oB,sBAAsB,gCAAAvJ,EAAA,6DACZuB,EAAU,EAAKD,MAAfC,MADY,kBAIGa,EAAYjB,eAAeI,GAJ9B,OAIdc,EAJc,OAMdmH,EAAM,EAAKlI,MAAMmD,aAAa6C,MAChC,SAACtH,GAAD,OAAOA,EAAEqF,iBAAmB9D,EAAMmB,sBAGpC,EAAKF,SAAS,CACZ0F,OAAQ,CACNrG,KAAMQ,EAASR,KACfa,mBAAoB8G,EAAIlE,iBAbV,gDAiBlBhD,QAAQC,IAAR,MAjBkB,yD,EAqBtB2G,oBAAsB,SAACR,GACrB,EAAKa,sBACLb,EAAES,kB,EAGJC,sBAAwB,SAACV,GACvB,EAAKlG,SAAS,CACZjB,MAAO,CACLL,QAAS,EAAKM,MAAMN,QACpBO,MAAM,IAAIC,MAAOC,cAAcC,WAC/Bc,mBAAoB,O,EAK1B+G,mBAAqB,SAACf,GACpB,EAAKlG,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBE,KAAMiH,EAAEC,OAAO7D,W,EAIjD8D,iCAAmC,SAACF,GAClC,EAAKlG,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBmB,mBAAoBgG,EAAEC,OAAO7D,W,kEAvD7DlC,KAAKuF,a,+BA2DG,IACAtG,EAASe,KAAKtB,MAAM4G,OAApBrG,KACR,OACE,kBAAC,IAAMgB,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eACZF,KAAKpB,MAAMN,QADd,sBAGA,yBAAK4B,UAAU,aACb,0BAAM4B,SAAU9B,KAAKsG,qBACnB,yBAAKpG,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,gBACA,2BACEC,KAAK,SACL8E,UAAU,EACV5G,UAAU,eACVgC,MAAOlC,KAAKtB,MAAMC,MAAME,KACxBuD,SAAUpC,KAAK6G,sBAGnB,yBAAK3G,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,kFAEA,4BACE7B,UAAU,eACV4G,UAAU,EACV5E,MAAOlC,KAAKtB,MAAMC,MAAMmB,mBACxBsC,SAAUpC,KAAKgG,kCAEf,4BAAQ9D,MAAM,GAAGI,cAAY,GAA7B,kCAGCtC,KAAKtB,MAAMmD,aAAahC,KAAI,SAAC0C,GAAD,OAC3B,4BAAQlC,IAAKkC,EAAEC,YAAaN,MAAOK,EAAEE,gBAClCF,EAAEG,qBAOb,yBAAKxC,UAAU,YACb,yBAAKA,UAAU,oCACb,4BAAQ8B,KAAK,SAAS9B,UAAU,mBAAhC,kCADF,YAKE,4BACE8B,KAAK,SACL9B,UAAU,oBACVkB,QAASpB,KAAKwG,uBAHhB,iCAaV,yBAAKtG,UAAU,SAEf,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKzC,GAAG,gBAAR,iEACeuC,KAAKtB,MAAM4G,OAAOxF,mBADjC,KAGA,2BAAOI,UAAU,+BAA+BzC,GAAG,cACjD,+BACE,4BACE,wBAAI0C,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,iBACA,wBAAIA,MAAM,OAAV,gBAGJ,+BACGlB,EAAKY,KAAI,SAACzC,EAAGgD,GAAJ,OACR,wBAAIC,IAAKjD,EAAEK,IACT,4BAAK2C,EAAQ,GACb,4BAAKhD,EAAE2J,OACP,4BAAK3J,EAAE2C,YACP,4BAAK3C,EAAE4J,cACP,4BAAK5J,EAAE6J,wB,GA/JE3G,aCwFd4G,E,4MAvFbxI,MAAQ,G,uDACE,IAAD,EAQHsB,KAAKpB,MANPD,EAFK,EAELA,MACAwI,EAHK,EAGLA,aACAC,EAJK,EAILA,cACAC,EALK,EAKLA,eACA1F,EANK,EAMLA,cACAC,EAPK,EAOLA,gBAGF,OACE,kBAAC,IAAM3B,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eACZF,KAAKpB,MAAM4G,cADd,gCAGA,yBAAKtF,UAAU,aACb,0BAAM4B,SAAUH,GACd,yBAAKzB,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,QACA,2BACEC,KAAK,OACL9B,UAAU,eACV+B,KAAK,OACLC,MAAOvD,EAAM+D,cACbN,SAAU+E,KAGd,yBAAKjH,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,SACA,2BACEC,KAAK,OACL9B,UAAU,eACV+B,KAAK,QACLC,MAAOvD,EAAM8D,eACbL,SAAUgF,MAKhB,yBAAKlH,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,aAAf,UACA,4BACE7B,UAAU,eACVgC,MAAOvD,EAAM+G,iBAAmB,GAChCtD,SAAUiF,GAEV,4BAAQnF,MAAM,IAAd,8CACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,cAGJ,yBAAKhC,UAAU,yBAEjB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,oCACb,4BAAQ8B,KAAK,SAAS9B,UAAU,mBAAhC,kCADF,YAKE,4BACE8B,KAAK,SACLZ,QAASQ,EACT1B,UAAU,qBAHZ,4BALF,YAaE,kBAAC,IAAD,CACEO,GAAE,WAAMT,KAAKpB,MAAM4G,cAAjB,mBACFtF,UAAU,mBAFZ,oE,GAxEqBI,aC4ExBgH,E,4MA1Eb5I,MAAQ,G,uDACE,IAAD,SAOHsB,KAAKpB,MALPK,EAFK,EAELA,KACA8D,EAHK,EAGLA,WACA8B,EAJK,EAILA,UACAtB,EALK,EAKLA,WACAL,EANK,EAMLA,aAGF,OACE,kBAAC,IAAMjD,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKzC,GAAG,gBAAR,gEACcsH,OAAOhC,GAAYiC,iBADjC,yCAGA,2BAAO9E,UAAU,+BAA+BzC,GAAG,cACjD,+BACE,4BACE,wBAAI0C,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SAGA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,UAGd,+BACGlB,EAAKY,KAAI,SAACzC,GAAD,OACR,wBAAIiD,IAAKjD,EAAEoF,aACT,4BAAKpF,EAAEsF,eACP,4BAAKtF,EAAEqF,gBAGP,4BAA2B,IAAtBrF,EAAEsI,gBAAwB,SAAW,YAC1C,wBAAI9E,MAAM,OACR,0BAAM2G,OAAO,OAAOC,aAAW,UAC7B,kBAAC,IAAD,CACE/G,GACE,WAAI,EAAK7B,MAAM4G,cAAf,iBACApI,EAAEoF,YAEJtC,UAAU,iCALZ,0CAuBZ,kBAAC,EAAD,CACE6C,WAAYA,EACZC,WAAY6B,EACZtB,WAAYA,EACZL,aAAcA,W,GAlES5C,aCsGtBmH,E,4MApGb/I,MAAQ,CACNC,MAAO,CACL+D,cAAe,GACfD,eAAgB,GAChBiD,gBAAiB,KACjBF,cAAe,EAAK5G,MAAM4G,eAE5BF,OAAQ,CACNrG,KAAM,GACN8D,WAAY,EACZQ,WAAY,EACZsB,WAAY,I,EAQhB7G,gB,sBAAkB,4CAAAZ,EAAA,6DAAOwI,EAAP,+BAAoB,GAC5BjH,EAAU,EAAKD,MAAfC,OACFiH,WAAaA,EAFH,kBAKOpG,EAAYxB,gBAAgBW,GALnC,OAKVc,EALU,OAMdC,QAAQC,IAAI,YAAaF,GACzB,EAAKG,SAAS,CAAE0F,OAAQ7F,EAASR,OAPnB,kDASdS,QAAQC,IAAI,QAAZ,MATc,0D,EAalB+H,4BAA8B,SAAC5B,GAC7B,EAAKlG,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyB+D,cAAeoD,EAAEC,OAAO7D,W,EAI1DyF,6BAA+B,SAAC7B,GAC9B,EAAKlG,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyB8D,eAAgBqD,EAAEC,OAAO7D,W,EAI3D0F,qBAAuB,SAAC9B,GACtB,EAAKlG,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyB+G,gBAAiBU,SAASN,EAAEC,OAAO7D,Y,EAIrEoE,oBAAsB,SAACR,GACrB,EAAK9H,kBAEL8H,EAAES,kB,EAGJC,sBAAwB,SAACV,GACvB,EAAKlG,SAAS,CACZjB,MAAO,CACL+D,cAAe,GACfD,eAAgB,GAChBiD,gBAAiB,KACjBF,cAAe,EAAK5G,MAAM4G,kB,EAKhCiB,mBAAqB,SAACb,GACpBlG,QAAQC,IAAI,uBAAwBiG,GACpC,EAAK5H,gBAAgB4H,I,kEArDrB5F,KAAKhC,oB,+BAyDL,OACE,kBAAC,IAAMiC,SAAP,KACE,kBAAC,EAAD,CACEuF,cAAexF,KAAKpB,MAAM4G,cAC1B7G,MAAOqB,KAAKtB,MAAMC,MAClBwI,aAAcnH,KAAK0H,4BACnBN,cAAepH,KAAK2H,6BACpBN,eAAgBrH,KAAK4H,qBACrBjG,cAAe3B,KAAKsG,oBACpB1E,gBAAiB5B,KAAKwG,wBAGxB,yBAAKtG,UAAU,SAEf,kBAAC,EAAD,CACEsF,cAAexF,KAAKpB,MAAM4G,cAC1BvG,KAAMe,KAAKtB,MAAM4G,OAAOrG,KACxB8D,WAAY/C,KAAKtB,MAAM4G,OAAOvC,WAC9B8B,UAAW7E,KAAKtB,MAAM4G,OAAOT,UAC7BtB,WAAYvD,KAAKtB,MAAM4G,OAAO/B,WAC9BL,aAAclD,KAAKyG,0B,GA9FEnG,aCgJhBuH,E,4MA/IbnJ,MAAQ,CACNO,KAAM,CACJuD,YAAa,KACbE,cAAe,GACfD,eAAgB,GAChBiD,gBAAiB,KACjBF,cAAe,EAAK5G,MAAM4G,cAC1BsC,YAAa,GACbC,UAAW,EACXC,YAAa,GACbC,UAAW,GAEbC,QAAS,I,EAOXlK,gB,sBAAkB,4BAAAZ,EAAA,sEACOoC,EAAYvB,oBACjC,EAAKW,MAAMuJ,MAAMC,OAAO3K,IAFV,OACVgC,EADU,OAIhBC,QAAQC,IAAI,WAAYF,GAExB,EAAKG,SAAS,CAAEX,KAAMQ,EAASR,OANf,2C,EASlBd,mB,sBAAqB,4BAAAf,EAAA,+EAEMoC,EAAYrB,mBAAmB,EAAKO,MAAMO,MAFhD,OAEXQ,EAFW,OAGjBC,QAAQC,IAAI,WAAYF,GAExB,EAAKG,SAAS,CAAEsI,QAAS,kCAEzB,EAAKtJ,MAAMyJ,QAAQC,KAAnB,WAA4B,EAAK1J,MAAM4G,cAAvC,kBAPiB,gDASjB9F,QAAQC,IAAR,MATiB,yD,EAarB4I,aAAe,SAACzC,GACd,EAAK3H,qBAEL2H,EAAES,kB,EAGJY,aAAe,SAACrB,GACd,EAAKlG,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwByD,cAAeoD,EAAEC,OAAO7D,W,EAIxDkF,cAAgB,SAACtB,GACf,EAAKlG,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwBwD,eAAgBqD,EAAEC,OAAO7D,W,EAIzDmF,eAAiB,SAACvB,GAChBpG,QAAQC,IAAI,iBAAkBmG,EAAEC,OAAO7D,OAEvC,EAAKtC,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwByG,gBAAiBU,SAASN,EAAEC,OAAO7D,Y,kEA/CjElC,KAAKhC,oB,+BAmDG,IACAiB,EAASe,KAAKtB,MAAdO,KAER,OACE,kBAAC,IAAMgB,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eACZF,KAAKpB,MAAM4G,cADd,+BAGA,yBAAKtF,UAAU,aACb,0BAAM4B,SAAU9B,KAAKuI,cACnB,yBAAKrI,UAAU,mCACb,yBAAKA,UAAU,uBAAuBF,KAAKtB,MAAMwJ,UAGnD,yBAAKhI,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,QACA,2BACEC,KAAK,OACL8E,UAAQ,EACR5G,UAAU,eACVgC,MAAOlC,KAAKtB,MAAMO,KAAKyD,cACvBN,SAAUpC,KAAKmH,iBAKrB,yBAAKjH,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,SACA,2BACE+E,UAAQ,EACR9E,KAAK,OACL9B,UAAU,eACVgC,MAAOjD,EAAKwD,eACZL,SAAUpC,KAAKoH,kBAKrB,yBAAKlH,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,aAAf,kCACA,4BACE7B,UAAU,eACVgC,MAAOjD,EAAKyG,gBACZtD,SAAUpC,KAAKqH,gBAEf,4BAAQnF,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,eAIN,yBAAKhC,UAAU,YACb,yBAAKA,UAAU,oCACb,4BAAQ8B,KAAK,SAAS9B,UAAU,mBAAhC,wCADF,YAKE,kBAAC,IAAD,CACEO,GAAE,WAAMT,KAAKpB,MAAM4G,cAAjB,iBACFtF,UAAU,qBAFZ,kD,GAhIaI,aCqIhBkI,E,4MApIb9J,MAAQ,CACNO,KAAM,CACJuD,YAAa,KACbE,cAAe,GACfD,eAAgB,GAChBiD,gBAAiB,EACjBF,cAAe,EAAK5G,MAAM4G,cAC1BsC,YAAa,IAAIhJ,KACjBiJ,UAAW,EACXC,YAAa,IAAIlJ,KACjBmJ,UAAW,GAEbC,QAAS,I,EAKX/J,mB,sBAAqB,4BAAAf,EAAA,+EAEMoC,EAAYtB,mBAAmB,EAAKQ,MAAMO,MAFhD,OAEXQ,EAFW,OAGjBC,QAAQC,IAAI,WAAYF,GAExB,EAAKG,SAAS,CAAEsI,QAAS,8BAEzB,EAAKtJ,MAAMyJ,QAAQC,KAAnB,WAA4B,EAAK1J,MAAM4G,cAAvC,kBAPiB,gDASjB9F,QAAQC,IAAR,MATiB,yD,EAarB4I,aAAe,SAACzC,GACd,EAAK3H,qBAEL2H,EAAES,kB,EAGJY,aAAe,SAACrB,GACd,EAAKlG,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwByD,cAAeoD,EAAEC,OAAO7D,W,EAIxDkF,cAAgB,SAACtB,GACf,EAAKlG,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwBwD,eAAgBqD,EAAEC,OAAO7D,W,EAIzDmF,eAAiB,SAACvB,GAChBpG,QAAQC,IAAI,iBAAkBmG,EAAEC,OAAO7D,OAEvC,EAAKtC,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwByG,gBAAiBU,SAASN,EAAEC,OAAO7D,Y,oGAIzD,IACAjD,EAASe,KAAKtB,MAAdO,KAER,OACE,kBAAC,IAAMgB,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eACZF,KAAKpB,MAAM4G,cADd,8BAGA,yBAAKtF,UAAU,aACb,0BAAM4B,SAAU9B,KAAKuI,cACnB,yBAAKrI,UAAU,mCACb,yBAAKA,UAAU,uBAAuBF,KAAKtB,MAAMwJ,UAGnD,yBAAKhI,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,QACA,2BACEC,KAAK,OACL8E,UAAQ,EACR5G,UAAU,eACVgC,MAAOlC,KAAKtB,MAAMO,KAAKyD,cACvBN,SAAUpC,KAAKmH,iBAKrB,yBAAKjH,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,SACA,2BACEC,KAAK,OACL8E,UAAQ,EACR5G,UAAU,eACVgC,MAAOjD,EAAKwD,eACZL,SAAUpC,KAAKoH,kBAKrB,yBAAKlH,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,aAAf,kCACA,4BACE7B,UAAU,eACVgC,MAAOjD,EAAKyG,iBAAmB,GAC/BtD,SAAUpC,KAAKqH,gBAEf,4BAAQnF,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,eAIN,yBAAKhC,UAAU,YACb,yBAAKA,UAAU,oCACb,4BAAQ8B,KAAK,SAAS9B,UAAU,mBAAhC,wCADF,YAKE,kBAAC,IAAD,CACEO,GAAE,WAAMT,KAAKpB,MAAM4G,cAAjB,iBACFtF,UAAU,qBAFZ,kD,GArHYI,aCmFfmI,E,4MApFb/J,MAAQ,G,uDACE,IAAD,EAQHsB,KAAKpB,MANPD,EAFK,EAELA,MACA+J,EAHK,EAGLA,iBACAC,EAJK,EAILA,kBACAC,EALK,EAKLA,mBACAjH,EANK,EAMLA,cACAC,EAPK,EAOLA,gBAGF,OACE,kBAAC,IAAM3B,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eAAf,mBACA,yBAAKA,UAAU,aACb,0BAAM4B,SAAUH,GACd,yBAAKzB,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,QACA,2BACEC,KAAK,OACL9B,UAAU,eACV+B,KAAK,OACLC,MAAOvD,EAAMwC,SACbiB,SAAUsG,KAGd,yBAAKxI,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,SACA,4BACE7B,UAAU,eACVgC,MAAOvD,EAAMqC,WAAa,GAC1BoB,SAAUuG,GAEV,4BAAQzG,MAAM,IAAd,8CACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,WAKN,yBAAKhC,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,aAAf,UACA,4BACE7B,UAAU,eACVgC,MAAOvD,EAAMkK,YAAc,GAC3BzG,SAAUwG,GAEV,4BAAQ1G,MAAM,IAAd,8CACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,cAGJ,yBAAKhC,UAAU,yBAEjB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,oCACb,4BAAQ8B,KAAK,SAAS9B,UAAU,mBAAhC,kCADF,YAKE,4BACE8B,KAAK,SACLZ,QAASQ,EACT1B,UAAU,qBAHZ,4BALF,YAaE,kBAAC,IAAD,CAAMO,GAAI,UAAWP,UAAU,mBAA/B,oE,GAxEaI,aCyEhBwI,E,4MAvEbpK,MAAQ,G,uDACE,IAAD,EAOHsB,KAAKpB,MALPK,EAFK,EAELA,KACA8D,EAHK,EAGLA,WACA8B,EAJK,EAILA,UACAtB,EALK,EAKLA,WACAL,EANK,EAMLA,aAGF,OACE,kBAAC,IAAMjD,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKzC,GAAG,gBAAR,gEACcsH,OAAOhC,GAAYiC,iBADjC,yCAGA,2BAAO9E,UAAU,+BAA+BzC,GAAG,cACjD,+BACE,4BACE,wBAAI0C,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SAGA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,UAGd,+BACGlB,EAAKY,KAAI,SAACzC,GAAD,OACR,wBAAIiD,IAAKjD,EAAE2D,QACT,4BAAK3D,EAAE+D,UACP,4BAAK/D,EAAE4D,WAGP,4BAAsB,IAAjB5D,EAAEyL,WAAmB,SAAW,YACrC,wBAAIjI,MAAM,OACR,0BAAM2G,OAAO,OAAOC,aAAW,UAC7B,kBAAC,IAAD,CACE/G,GAAI,SAAWrD,EAAE2D,OACjBb,UAAU,iCAFZ,0CAoBZ,kBAAC,EAAD,CACE6C,WAAYA,EACZC,WAAY6B,EACZtB,WAAYA,EACZL,aAAcA,W,GA/DC5C,aC0GdyI,E,4MAxGbrK,MAAQ,CACNC,MAAO,CACLwC,SAAU,GACVH,UAAW,GACX6H,WAAY,MAEdvD,OAAQ,CACNrG,KAAM,GACN8D,WAAY,EACZQ,WAAY,EACZsB,WAAY,I,EAQhBtH,Q,sBAAU,4CAAAH,EAAA,6DAAOwI,EAAP,+BAAoB,GACpBjH,EAAU,EAAKD,MAAfC,OACFiH,WAAaA,EAFX,kBAKepG,EAAYjC,QAAQoB,GALnC,OAKFc,EALE,OAMNC,QAAQC,IAAI,YAAaF,GACzB,EAAKG,SAAS,CAAE0F,OAAQ7F,EAASR,OAP3B,kDASNS,QAAQC,IAAI,QAAZ,MATM,0D,EAaVqJ,uBAAyB,SAAClD,GACxB,EAAKlG,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBwC,SAAU2E,EAAEC,OAAO7D,W,EAIrD+G,wBAA0B,SAACnD,GACzB,EAAKlG,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBqC,UAAW8E,EAAEC,OAAO7D,W,EAItDgH,yBAA2B,SAACpD,GAC1B,EAAKlG,SAAS,CACZjB,MAAM,2BAAM,EAAKD,MAAMC,OAAlB,IAAyBkK,WAAYzC,SAASN,EAAEC,OAAO7D,Y,EAIhEoE,oBAAsB,SAACR,GACrB,EAAKvI,UAELuI,EAAES,kB,EAGJC,sBAAwB,SAACV,GACvB,EAAKlG,SAAS,CACZjB,MAAO,CACLwC,SAAU,GACVH,UAAW,GACX6H,WAAY,S,EAKlBpC,mBAAqB,SAACb,GACpBlG,QAAQC,IAAI,uBAAwBiG,GACpC,EAAKrI,QAAQqI,I,kEApDb5F,KAAKzC,Y,+BAwDL,OAAIyC,KAAKpB,MAAMuK,eAAiBnJ,KAAKpB,MAAMkC,WAAWE,UAElD,kBAAC,IAAMf,SAAP,KACE,yBAAKC,UAAU,oBAAf,sBAMJ,kBAAC,IAAMD,SAAP,KACE,kBAAC,EAAD,CACEtB,MAAOqB,KAAKtB,MAAMC,MAClB+J,iBAAkB1I,KAAKgJ,uBACvBL,kBAAmB3I,KAAKiJ,wBACxBL,mBAAoB5I,KAAKkJ,yBACzBvH,cAAe3B,KAAKsG,oBACpB1E,gBAAiB5B,KAAKwG,wBAGxB,yBAAKtG,UAAU,SAEf,kBAAC,EAAD,CACEjB,KAAMe,KAAKtB,MAAM4G,OAAOrG,KACxB8D,WAAY/C,KAAKtB,MAAM4G,OAAOvC,WAC9B8B,UAAW7E,KAAKtB,MAAM4G,OAAOT,UAC7BtB,WAAYvD,KAAKtB,MAAM4G,OAAO/B,WAC9BL,aAAclD,KAAKyG,0B,GAlGNnG,aCuJR8I,E,4MAtJb1K,MAAQ,CACNO,KAAM,CACJ8B,QAAS,EACTI,SAAU,GACVH,UAAW,GACX6H,WAAY,MAEdX,QAAS,I,EAOX3K,Q,sBAAU,4BAAAH,EAAA,sEACeoC,EAAYhC,YAAY,EAAKoB,MAAMuJ,MAAMC,OAAO3K,IAD/D,OACFgC,EADE,OAERC,QAAQC,IAAI,WAAYF,GAExB,EAAKG,SAAS,CAAEX,KAAMQ,EAASR,OAJvB,2C,EAOVrB,W,sBAAa,4BAAAR,EAAA,+EAEcoC,EAAY5B,WAAW,EAAKc,MAAMO,MAFhD,OAEHQ,EAFG,OAGTC,QAAQC,IAAI,WAAYF,GAExB,EAAKG,SAAS,CAAEsI,QAAS,kCAEzB,EAAKtJ,MAAMyJ,QAAQC,KAAK,UAPf,gDAST5I,QAAQC,IAAR,MATS,yD,EAab4I,aAAe,SAACzC,GACd,EAAKlI,aAELkI,EAAES,kB,EAGJmC,iBAAmB,SAAC5C,GAClB,EAAKlG,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwBkC,SAAU2E,EAAEC,OAAO7D,W,EAInDyG,kBAAoB,SAAC7C,GACnB,EAAKlG,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwB+B,UAAW8E,EAAEC,OAAO7D,W,EAIpD0G,mBAAqB,SAAC9C,GACpBpG,QAAQC,IAAI,iBAAkBmG,EAAEC,OAAO7D,OAEvC,EAAKtC,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwB4J,WAAYzC,SAASN,EAAEC,OAAO7D,Y,kEA7C5DlC,KAAKzC,Y,+BAkDL,GAAIyC,KAAKpB,MAAMuK,eAAiBnJ,KAAKpB,MAAMkC,WAAWE,UACpD,OACE,kBAAC,IAAMf,SAAP,KACE,yBAAKC,UAAU,oBAAf,sBAJC,IASCjB,EAASe,KAAKtB,MAAdO,KAER,OACE,kBAAC,IAAMgB,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eAAeF,KAAKpB,MAAMyK,SAAzC,gBACA,yBAAKnJ,UAAU,aACb,0BAAM4B,SAAU9B,KAAKuI,cACnB,yBAAKrI,UAAU,mCACb,yBAAKA,UAAU,uBAAuBF,KAAKtB,MAAMwJ,UAGnD,yBAAKhI,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,YACA,2BACEC,KAAK,OACL8E,UAAQ,EACR5G,UAAU,eACVgC,MAAOlC,KAAKtB,MAAMO,KAAKkC,SACvBiB,SAAUpC,KAAK0I,qBAKrB,yBAAKxI,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,SACA,4BACE+E,UAAQ,EACR5G,UAAU,eACVgC,MAAOlC,KAAKtB,MAAMO,KAAK+B,WAAa,GACpCoB,SAAUpC,KAAK2I,mBAEf,4BAAQzG,MAAM,IAAd,kCACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,WAKN,yBAAKhC,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,aAAf,kCACA,4BACE7B,UAAU,eACVgC,MAAOjD,EAAK4J,WACZzG,SAAUpC,KAAK4I,oBAEf,4BAAQ1G,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,eAKN,yBAAKhC,UAAU,YACb,yBAAKA,UAAU,oCACb,4BAAQ8B,KAAK,SAAS9B,UAAU,mBAAhC,wCADF,YAKE,kBAAC,IAAD,CACEO,GAAE,yBAAoBT,KAAKtB,MAAMO,KAAK8B,QACtCb,UAAU,qBAFZ,kBALF,YAYE,kBAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,qBAA5B,kD,GA1IKI,aC2JRgJ,E,4MA1Jb5K,MAAQ,CACNO,KAAM,CACJ8B,QAAS,EACTI,SAAU,GACVoI,SAAU,GACVvI,UAAW,GACX6H,WAAY,GAEdX,QAAS,I,EAKXvK,W,sBAAa,4BAAAP,EAAA,+EAEcoC,EAAY7B,WAAW,EAAKe,MAAMO,MAFhD,OAEHQ,EAFG,OAGTC,QAAQC,IAAI,WAAYF,GAExB,EAAKG,SAAS,CAAEsI,QAAS,8BAEzB,EAAKtJ,MAAMyJ,QAAQC,KAAK,UAPf,gDAST5I,QAAQC,IAAR,MATS,yD,EAab4I,aAAe,SAACzC,GACd,EAAKnI,aAELmI,EAAES,kB,EAGJmC,iBAAmB,SAAC5C,GAClB,EAAKlG,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwBkC,SAAU2E,EAAEC,OAAO7D,W,EAInDsH,iBAAmB,SAAC1D,GAClB,EAAKlG,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwBsK,SAAUzD,EAAEC,OAAO7D,W,EAInDyG,kBAAoB,SAAC7C,GACnB,EAAKlG,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwB+B,UAAW8E,EAAEC,OAAO7D,W,EAIpD0G,mBAAqB,SAAC9C,GACpBpG,QAAQC,IAAI,iBAAkBmG,EAAEC,OAAO7D,OAEvC,EAAKtC,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwB4J,WAAYzC,SAASN,EAAEC,OAAO7D,Y,oGAK5D,GAAIlC,KAAKpB,MAAMuK,eAAiBnJ,KAAKpB,MAAMkC,WAAWE,UACpD,OACE,kBAAC,IAAMf,SAAP,KACE,yBAAKC,UAAU,oBAAf,sBAJC,IASCjB,EAASe,KAAKtB,MAAdO,KAER,OACE,kBAAC,IAAMgB,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eAAeF,KAAKpB,MAAMyK,SAAzC,eACA,yBAAKnJ,UAAU,aACb,0BAAM4B,SAAU9B,KAAKuI,cACnB,yBAAKrI,UAAU,mCACb,yBAAKA,UAAU,uBAAuBF,KAAKtB,MAAMwJ,UAGnD,yBAAKhI,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,YACA,2BACEC,KAAK,OACL8E,UAAQ,EACR5G,UAAU,eACVgC,MAAOlC,KAAKtB,MAAMO,KAAKkC,SACvBiB,SAAUpC,KAAK0I,qBAKrB,yBAAKxI,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,YACA,2BACEC,KAAK,WACL8E,UAAQ,EACR5G,UAAU,eACVgC,MAAOlC,KAAKtB,MAAMO,KAAKsK,SACvBnH,SAAUpC,KAAKwJ,qBAKrB,yBAAKtJ,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,SACA,4BACE+E,UAAQ,EACR5G,UAAU,eACVgC,MAAOlC,KAAKtB,MAAMO,KAAK+B,WAAa,GACpCoB,SAAUpC,KAAK2I,mBAEf,4BAAQzG,MAAM,IAAd,kCACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,WAKN,yBAAKhC,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,aAAf,kCACA,4BACE7B,UAAU,eACVgC,MAAOjD,EAAK4J,WACZzG,SAAUpC,KAAK4I,oBAEf,4BAAQ1G,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,eAKN,yBAAKhC,UAAU,YACb,yBAAKA,UAAU,oCACb,4BAAQ8B,KAAK,SAAS9B,UAAU,mBAAhC,wCADF,YAKE,kBAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,qBAA5B,kD,GA9III,aCoFPmJ,E,4MAtFb/K,MAAQ,CAAEgL,cAAc,G,EAExBC,eAAiB,WACf,EAAK/J,SAAS,CAAE8J,cAAe,EAAKhL,MAAMgL,gB,uDAGlC,IAAD,EAOH1J,KAAKpB,MALPgL,EAFK,EAELA,cACAC,EAHK,EAGLA,kBACAC,EAJK,EAILA,kBACAhJ,EALK,EAKLA,WACAiJ,EANK,EAMLA,YAGF,OACE,kBAAC,IAAM9J,SAAP,KACE,yBAAK+J,MAAO,CAAEpJ,MAAO,SACnB,yBACEoJ,MAAO,CACLpJ,MAAO,QACPqJ,OAAQ,eAGV,yBAAK/J,UAAU,QACb,yBAAKA,UAAU,eAAf,iCACA,yBAAKA,UAAU,aACb,0BAAM4B,SAAU8H,GACd,yBAAK1J,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,6BAGA,2BACEC,KAAK,OACL8E,UAAQ,EACR5G,UAAU,eACVgC,MAAOpB,EAAWK,SAClBiB,SAAUyH,MAKhB,yBAAK3J,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,YACA,2BACEC,KAAMhC,KAAKtB,MAAMgL,aAAe,OAAS,WACzC5C,UAAQ,EACR5G,UAAU,eACVgC,MAAOpB,EAAWyI,SAClBnH,SAAU0H,MAIhB,yBAAK5J,UAAU,mCACb,yBAAKA,UAAU,uBACb,+BACE,2BAAO8B,KAAK,WAAWZ,QAASpB,KAAK2J,iBAAmB,IAD1D,mBAMJ,yBAAKzJ,UAAU,YACb,yBAAKA,UAAU,oCACb,4BAAQ8B,KAAK,SAAS9B,UAAU,mBAAhC,WAMJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,oCACb,0BAAMA,UAAU,eAAe6J,e,GA1EjCzJ,aC6HL4J,E,4MAzHbxL,MAAQ,CACNO,KAAM,CACJ8B,QAAS,EACTI,SAAU,GACVH,UAAW,GACX6H,WAAY,KACZU,SAAU,IAEZrB,QAAS,I,EAkBX1K,Y,uCAAc,WAAOC,GAAP,eAAAL,EAAA,sEACWoC,EAAYhC,YAAYC,GADnC,OACNgC,EADM,OAEZC,QAAQC,IAAI,WAAYF,GAExB,EAAKG,SAAS,CAAEX,KAAMQ,EAASR,KAAMiJ,QAAS,KAJlC,2C,wDAOdrK,mB,sBAAqB,4BAAAT,EAAA,+EAEMoC,EAAY3B,mBAAmB,EAAKa,MAAMO,MAFhD,OAEXQ,EAFW,OAGjBC,QAAQC,IAAI,WAAYF,GAExB,EAAKG,SAAS,CAAEsI,QAAS,+BALR,gDAOjBxI,QAAQC,IAAR,MAPiB,yD,EAWrB4I,aAAe,SAACzC,GACd,EAAKjI,qBAELiI,EAAES,kB,EAGJiD,iBAAmB,SAAC1D,GAClB,EAAKlG,SAAS,CACZX,KAAK,2BAAM,EAAKP,MAAMO,MAAlB,IAAwBsK,SAAUzD,EAAEC,OAAO7D,W,kEAxCjDxC,QAAQC,IAAI,qBACZD,QAAQC,IAAI,6BAA8BK,KAAKpB,MAAMuJ,MAAMC,OAAO3K,IAClEuC,KAAKxC,YAAYwC,KAAKpB,MAAMuJ,MAAMC,OAAO3K,M,2CAIzCiC,QAAQC,IAAI,wB,gDAGYwK,GACxBzK,QAAQC,IAAI,4BAA6BwK,GACzCnK,KAAKxC,YAAY2M,EAAUhC,MAAMC,OAAO3K,M,+BAkCxC,OACEuC,KAAKpB,MAAMuK,eAAiBnJ,KAAKpB,MAAMkC,WAAWE,WAClDhB,KAAKpB,MAAMkC,WAAWC,OAAO/B,aAC3BgB,KAAKpB,MAAMuJ,MAAMC,OAAO3K,GAAGuB,WAG3B,kBAAC,IAAMiB,SAAP,KACE,yBAAKC,UAAU,oBAAf,sBAMJ,kBAAC,IAAMD,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eACZF,KAAKpB,MAAMyK,SADd,2BAGA,yBAAKnJ,UAAU,aACb,0BAAM4B,SAAU9B,KAAKuI,cACK,KAAvBvI,KAAKtB,MAAMwJ,QACV,yBAAKhI,UAAU,mCACb,yBAAKA,UAAU,uBACZF,KAAKtB,MAAMwJ,UAIhB,kBAAC,IAAMjI,SAAP,KACE,yBAAKC,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAO6B,QAAQ,cAAf,kCAEG/B,KAAKtB,MAAMO,KAAKkC,SAFnB,KAIA,2BACEa,KAAK,WACL8E,UAAQ,EACR5G,UAAU,eACVgC,MAAOlC,KAAKtB,MAAMO,KAAKsK,SACvBnH,SAAUpC,KAAKwJ,qBAIrB,yBAAKtJ,UAAU,YACb,yBAAKA,UAAU,oCACb,4BAAQ8B,KAAK,SAAS9B,UAAU,mBAAhC,wCADF,YAKE,kBAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,qBAAvB,mD,GA3GMI,aCuSb8J,E,4MAtRb1L,MAAQ,CACNoC,WAAY,CACVC,OAAQqF,SAASiE,aAAaC,QAAQ,4BAA8B,EACpEnJ,SAAUkJ,aAAaC,QAAQ,4BAA8B,GAC7Df,SAAU,GACVvI,UAAWqJ,aAAaC,QAAQ,6BAA+B,GAC/DzB,YAAa,GAEfkB,YAAaM,aAAaC,QAAQ,oBAAsB,I,EAG1DC,M,sBAAQ,8BAAAnN,EAAA,+EAEmBoC,EAAYtC,UAAU,EAAKwB,MAAMoC,YAFpD,OAEErB,EAFF,OAGJC,QAAQC,IAAI,gBAAiBF,GAEzBqB,EAAarB,EAASR,KAE1B,EAAKW,SAAS,CAAEkB,WAAYA,EAAYiJ,YAAa,aACrDM,aAAaG,QAAQ,wBAAyB1J,EAAWC,QACzDsJ,aAAaG,QAAQ,0BAA2B1J,EAAWK,UAC3DkJ,aAAaG,QAAQ,2BAA4B1J,EAAWE,WAC5DqJ,aAAaG,QAAQ,kBAAmB,YAExC9K,QAAQC,IAAI,aAAc,EAAKjB,MAAMoC,YAbjC,kDAeJ,EAAKlB,SAAS,CAAEmK,YAAa,iCAC7BrK,QAAQC,IAAR,MAhBI,0D,EAoBR8K,O,sBAAS,sBAAArN,EAAA,sDACP,EAAKwC,SAAS,CACZkB,WAAY,CACVC,QAAS,EACTI,SAAU,GACVoI,SAAU,IAEZQ,YAAa,KAGfM,aAAaK,WAAW,yBACxBL,aAAaK,WAAW,2BACxBL,aAAaK,WAAW,4BACxBL,aAAaK,WAAW,mBAbjB,2C,EAgBTd,cAAgB,SAAC9D,GACf,EAAKyE,QAELzE,EAAES,kB,EAGJrF,gBAAkB,SAAC4E,GACjB,EAAK2E,U,EAGPZ,kBAAoB,SAAC/D,GACnB,EAAKlG,SAAS,CACZkB,WAAW,2BAAM,EAAKpC,MAAMoC,YAAlB,IAA8BK,SAAU2E,EAAEC,OAAO7D,W,EAI/D4H,kBAAoB,SAAChE,GACnB,EAAKlG,SAAS,CACZkB,WAAW,2BAAM,EAAKpC,MAAMoC,YAAlB,IAA8ByI,SAAUzD,EAAEC,OAAO7D,W,uDAIrD,IAAD,OAOP,OANAxC,QAAQC,IACN,0BACA0K,aAAaC,QAAQ,4BAEvB5K,QAAQC,IAAI,kBAAmB0K,aAAaC,QAAQ,oBAErB,aAA3BtK,KAAKtB,MAAMqL,YAEX,kBAAC,EAAD,CACEjJ,WAAYd,KAAKtB,MAAMoC,WACvBiJ,YAAa/J,KAAKtB,MAAMqL,YACxBH,cAAe5J,KAAK4J,cACpBC,kBAAmB7J,KAAK6J,kBACxBC,kBAAmB9J,KAAK8J,oBAK5B,kBAAC,IAAD,KACE,kBAAC,IAAM7J,SAAP,KACE,kBAAC,EAAD,CAASa,WAAYd,KAAKtB,MAAMoC,aAEhC,yBAAKrD,GAAG,kBAAkByC,UAAU,sBAClC,yBAAKzC,GAAG,WACN,kBAAC,EAAD,CACEqD,WAAYd,KAAKtB,MAAMoC,WACvBI,gBAAiBlB,KAAKkB,kBAGxB,yBAAKhB,UAAU,mBACb,yBAAKzC,GAAG,OACN,kBAAC,IAAD,CAAOkN,OAAK,EAACC,KAAK,IAAIC,UAAWtK,IACjC,kBAAC,IAAD,CAAOqK,KAAK,aAAaC,UAAWtK,IAEpC,kBAAC,IAAD,CACEqK,KAAK,cACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAeA,EAAf,CAAsByD,KAAK,SAAS/D,QAAQ,aAGhD,kBAAC,IAAD,CACEsM,KAAK,oBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAeA,EAAf,CAAsByD,KAAK,QAAQ/D,QAAQ,aAG/C,kBAAC,IAAD,CACEsM,KAAK,mBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAoBA,EAApB,CAA2BN,QAAQ,aAGvC,kBAAC,IAAD,CACEsM,KAAK,qBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAsBA,EAAtB,CAA6B4G,cAAc,aAG/C,kBAAC,IAAD,CACEoF,KAAK,wBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAsBA,EAAtB,CAA6B4G,cAAc,aAG/C,kBAAC,IAAD,CACEoF,KAAK,uBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAqBA,EAArB,CAA4B4G,cAAc,aAI9C,kBAAC,IAAD,CACEoF,KAAK,aACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAeA,EAAf,CAAsByD,KAAK,SAAS/D,QAAQ,YAGhD,kBAAC,IAAD,CACEsM,KAAK,mBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAeA,EAAf,CAAsByD,KAAK,QAAQ/D,QAAQ,YAI/C,kBAAC,IAAD,CACEsM,KAAK,kBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAoBA,EAApB,CAA2BN,QAAQ,YAIvC,kBAAC,IAAD,CACEsM,KAAK,oBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAsBA,EAAtB,CAA6B4G,cAAc,YAG/C,kBAAC,IAAD,CACEoF,KAAK,uBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAsBA,EAAtB,CAA6B4G,cAAc,YAG/C,kBAAC,IAAD,CACEoF,KAAK,sBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAqBA,EAArB,CAA4B4G,cAAc,YAI9C,kBAAC,IAAD,CACEoF,KAAK,aACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAeA,EAAf,CAAsByD,KAAK,SAAS/D,QAAQ,YAGhD,kBAAC,IAAD,CACEsM,KAAK,mBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAeA,EAAf,CAAsByD,KAAK,QAAQ/D,QAAQ,YAI/C,kBAAC,IAAD,CACEsM,KAAK,kBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAoBA,EAApB,CAA2BN,QAAQ,YAIvC,kBAAC,IAAD,CACEsM,KAAK,oBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAsBA,EAAtB,CAA6B4G,cAAc,YAG/C,kBAAC,IAAD,CACEoF,KAAK,uBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAsBA,EAAtB,CAA6B4G,cAAc,YAG/C,kBAAC,IAAD,CACEoF,KAAK,sBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBAAqBA,EAArB,CAA4B4G,cAAc,YAI9C,kBAAC,IAAD,CACEoF,KAAK,SACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBACMA,EADN,CAEEuK,aAAa,QACbrI,WAAY,EAAKpC,MAAMoC,iBAI7B,kBAAC,IAAD,CACE8J,KAAK,YACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBACMA,EADN,CAEEuK,aAAa,QACbrI,WAAY,EAAKpC,MAAMoC,iBAI7B,kBAAC,IAAD,CACE8J,KAAK,WACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBACMA,EADN,CAEEuK,aAAa,QACbrI,WAAY,EAAKpC,MAAMoC,iBAK7B,kBAAC,IAAD,CACE8J,KAAK,qBACLE,OAAQ,SAAClM,GAAD,OACN,kBAAC,EAAD,iBACMA,EADN,CAEEuK,aAAa,QACbrI,WAAY,EAAKpC,MAAMoC,oBAQnC,4BAAQZ,UAAU,0BAChB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,iCACb,mE,GA5QAI,aCTEyK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/C,MACvB,2DCZNgD,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,YDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpM,QAAQoM,MAAMA,EAAM5D,a","file":"static/js/main.7ddae706.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  //baseURL: \"https://localhost:44384/api\",\r\n  //baseURL: \"http://172.27.1.16:11287/api\",\r\n  //baseURL: \"http://172.27.1.16:81/6dreportApi/api\",\r\n\r\n  //baseURL: \"http://localhost:11287/api\",\r\n  baseURL: \"http://dev.vasreport.totmobile.net:81/6dreportApi/api\",\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n","import http from \"./HttpCommon\";\r\n\r\nclass DataService {\r\n  UserLogin = async (q) => {\r\n    return http.post(\"/User/Login\", q);\r\n  };\r\n\r\n  GetUser = async (q) => {\r\n    return http.post(\"/User/GetUsers\", q);\r\n  };\r\n  GetUserById = async (id) => {\r\n    return http.get(`/User/GetUser/${id}`);\r\n  };\r\n  CreateUser = async (q) => {\r\n    return http.post(\"/User/Create\", q);\r\n  };\r\n  UpdateUser = async (q) => {\r\n    return http.post(\"/User/Update\", q);\r\n  };\r\n  ChangePasswordUser = async (q) => {\r\n    return http.post(\"/User/ChangePassword\", q);\r\n  };\r\n  DeleteUser = async (id) => {\r\n    return http.delete(`/User/Delete/${id}`);\r\n  };\r\n\r\n  GetDestnAddrMap = async (q) => {\r\n    return http.post(\"/DestnAddrMaps/GetDestnAddrMap\", q);\r\n  };\r\n  GetDestnAddrMapById = async (id) => {\r\n    return http.get(`/DestnAddrMaps/GetDestnAddrMap/${id}`);\r\n  };\r\n  CreateDestnAddrMap = async (q) => {\r\n    return http.post(\"/DestnAddrMaps/CreateDestnAddrMap\", q);\r\n  };\r\n  UpdateDestnAddrMap = async (q) => {\r\n    return http.post(\"/DestnAddrMaps/UpdateDestnAddrMap\", q);\r\n  };\r\n  DeleteDestnAddrMap = async (id) => {\r\n    return http.delete(`/DestnAddrMaps/DeleteDestnAddrMap/${id}`);\r\n  };\r\n\r\n  GetReport = async (q) => {\r\n    return http.post(`/${q.vasType}/GetReport`, q);\r\n  };\r\n  GetMngmtReport = async (q) => {\r\n    return http.post(`/${q.vasType}/GetMngmtReport`, q);\r\n  };\r\n  GetDashboardReport1 = async (q) => {\r\n    return http.post(`/${q.vasType}/GetDashboardReport1`, q);\r\n  };\r\n}\r\n\r\nexport default new DataService();\r\n","import React, { Component } from \"react\";\r\nimport DataService from \"../services/DataService\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nclass DashboardItem extends Component {\r\n  state = {\r\n    query: {\r\n      vasType: this.props.vasType,\r\n      year: new Date().getFullYear().toString(),\r\n    },\r\n\r\n    data: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          data: [],\r\n          backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#66d9ff\",\r\n            \"#ff66ff\",\r\n            \"#ffb366\",\r\n            \"#ff8c66\",\r\n            \"#66ffff\",\r\n            \"#d966ff\",\r\n            \"#ff66b3\",\r\n            \"#8cff66\",\r\n          ],\r\n          hoverBackgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#66d9ff\",\r\n            \"#ff66ff\",\r\n            \"#ffb366\",\r\n            \"#ff8c66\",\r\n            \"#66ffff\",\r\n            \"#d966ff\",\r\n            \"#ff66b3\",\r\n            \"#8cff66\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n\r\n    rawData: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetUSSDDashboardReport1();\r\n  }\r\n\r\n  GetUSSDDashboardReport1 = async () => {\r\n    const { query } = this.state;\r\n\r\n    try {\r\n      let response = await DataService.GetDashboardReport1(query);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({\r\n        data: {\r\n          labels: response.data.map((a) => a.destinationAddress),\r\n          datasets: [\r\n            {\r\n              data: response.data.map((a) => a.totalCount),\r\n            },\r\n          ],\r\n        },\r\n        rawData: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Dashboard {this.props.vasType}</div>\r\n          <div className=\"card-body\">\r\n            <div className=\"containner\">\r\n              <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                  <Pie data={this.state.data} />\r\n                </div>\r\n                <div className=\"col\">\r\n                  <table\r\n                    className=\"table table-sm table-striped\"\r\n                    id=\"tblResults\"\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">Short Code</th>\r\n                        <th scope=\"col\">Total Count</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.rawData.map((a, index) => (\r\n                        <tr key={a.destinationAddress}>\r\n                          <td>{a.destinationAddress}</td>\r\n                          <td>{a.totalCount}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardItem;\r\n","import React, { Component } from \"react\";\r\nimport DashboardItem from \"./DashboardItem\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <DashboardItem vasType=\"USSD\" />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <DashboardItem vasType=\"IVR\" />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <DashboardItem vasType=\"MCN\" />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ul\r\n          className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"\r\n          id=\"accordionSidebar\"\r\n        >\r\n          <NavLink\r\n            to=\"/\"\r\n            className=\"sidebar-brand d-flex align-items-center justify-content-center\"\r\n          >\r\n            <div className=\"sidebar-brand-icon\">\r\n              <img\r\n                src=\"./img/crop-1574178163015.jpg\"\r\n                alt=\"TOT\"\r\n                width=\"60\"\r\n                height=\"60\"\r\n              />\r\n            </div>\r\n            <div className=\"sidebar-brand-text mx-3\">TOT Report</div>\r\n          </NavLink>\r\n\r\n          <hr className=\"sidebar-divider my-0\" />\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/Dashboard\">\r\n              <i className=\"fas fa-fw fa-tachometer-alt\"></i>\r\n              <span>Dashboard</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <hr className=\"sidebar-divider\" />\r\n\r\n          <div className=\"sidebar-heading\">USSD Report</div>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/USSDReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>USSD Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/USSDSystemReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>USSD System Report</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/USSDMngmtReport\">\r\n              <i className=\"fas fa-fw fa-chart-area\"></i>\r\n              <span>USSD Management Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/USSDDestnAddrMaps\">\r\n              <i className=\"fas fa-fw fa-cog\"></i>\r\n              <span>USSD Destination Setting</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <hr className=\"sidebar-divider\" />\r\n\r\n          <div className=\"sidebar-heading\">IVR Report</div>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/IVRReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>IVR Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/IVRSystemReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>IVR System Report</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/IVRMngmtReport\">\r\n              <i className=\"fas fa-fw fa-chart-area\"></i>\r\n              <span>IVR Management Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/IVRDestnAddrMaps\">\r\n              <i className=\"fas fa-fw fa-cog\"></i>\r\n              <span>IVR Destination Setting</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <hr className=\"sidebar-divider\" />\r\n\r\n          <div className=\"sidebar-heading\">MCN Report</div>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MCNReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>MCN Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MCNSystemReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>MCN System Report</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MCNMngmtReport\">\r\n              <i className=\"fas fa-fw fa-chart-area\"></i>\r\n              <span>MCN Management Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MCNDestnAddrMaps\">\r\n              <i className=\"fas fa-fw fa-cog\"></i>\r\n              <span>MCN Destination Setting</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <hr className=\"sidebar-divider\" />\r\n\r\n          <div className=\"sidebar-heading\">User Settings</div>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to={`/UserChangePwd/${this.props.loggedUser.userId}`}\r\n            >\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>Change Password</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          {this.props.loggedUser.userGroup === \"Admin\" && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/Users\">\r\n                  <i className=\"fas fa-fw fa-table\"></i>\r\n                  <span>Users</span>\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Topbar extends Component {\r\n  state = {};\r\n  render() {\r\n    const { loggedUser, onLogoutClicked } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <!-- Topbar --> */}\r\n        <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n          <button\r\n            id=\"sidebarToggleTop\"\r\n            className=\"btn btn-link d-md-none rounded-circle mr-3\"\r\n          >\r\n            <i className=\"fa fa-bars\"></i>\r\n          </button>\r\n\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <button className=\"dropdown-item\">\r\n              <i className=\"fas fa-user fa-sm fa-fw text-gray-400\"></i>\r\n              {loggedUser.userName}\r\n            </button>\r\n            <button className=\"dropdown-item\" onClick={onLogoutClicked}>\r\n              <i className=\"fas fa-sign-out-alt fa-sm fa-fw text-gray-400\"></i>\r\n              Logout\r\n            </button>\r\n          </ul>\r\n        </nav>\r\n        {/* <!-- End of Topbar --> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass VASReportCriteria extends Component {\r\n  render() {\r\n    const {\r\n      query,\r\n      onOriginationAddressChange,\r\n      onDestinationAddressChange,\r\n      onStartDateChange,\r\n      onEndDateChange,\r\n      onMessageStatusChange,\r\n      onSubmitQuery,\r\n      onCancelClicked,\r\n    } = this.props;\r\n\r\n    const { destnAddrMap } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            รายงาน Log การใช้งาน {this.props.vasType}\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={onSubmitQuery}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">หมายเลข</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"OriginationAddress\"\r\n                    value={query.originationAddress}\r\n                    onChange={onOriginationAddressChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">หมายเลขบริการ</label>\r\n\r\n                  {this.props.mode === \"Normal\" ? (\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={query.destinationAddress}\r\n                      onChange={onDestinationAddressChange}\r\n                    >\r\n                      <option value=\"\" defaultValue>\r\n                        ทั้งหมด\r\n                      </option>\r\n                      {destnAddrMap.map((i) => (\r\n                        <option key={i.destnAddrId} value={i.destnAddrValue}>\r\n                          {i.destnAddrName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  ) : (\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"OriginationAddress\"\r\n                      value={query.destinationAddress}\r\n                      onChange={onDestinationAddressChange}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">วันที่เริ่มต้น</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    value={query.startDate}\r\n                    onChange={onStartDateChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">วันที่สิ้นสุด</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    value={query.endDate}\r\n                    onChange={onEndDateChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">สถานะ</label>\r\n                  <select\r\n                    value={query.messageStatus || \"\"}\r\n                    onChange={onMessageStatusChange}\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option value=\"\">ทั้งหมด</option>\r\n                    <option value=\"1\">Success</option>\r\n                    <option value=\"2\">Fail</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group col-md-4\"></div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ค้นหา\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={onCancelClicked}\r\n                  >\r\n                    ล้าง\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VASReportCriteria;\r\n","import React, { Component } from \"react\";\r\nimport { Paginate } from \"../helper/Paginate\";\r\n\r\nclass Pagination extends Component {\r\n  render() {\r\n    console.log(\"Pagination props\", this.props);\r\n\r\n    const { totalItems, activePage, pageSize, onPageChange } = this.props;\r\n\r\n    const { pages, currentPage, totalPages } = Paginate(\r\n      totalItems,\r\n      activePage,\r\n      pageSize\r\n    );\r\n\r\n    console.log(\"pages\", pages);\r\n    console.log(\"currentPage\", currentPage);\r\n    console.log(\"totalPages\", totalPages);\r\n\r\n    if (pages.length === 0 || totalPages < 2) return null;\r\n\r\n    return (\r\n      <nav aria-label=\"Page navigation\">\r\n        <ul className=\"pagination\" id=\"ulPagination\">\r\n          <li className=\"page-item\">\r\n            <button className=\"page-link\" onClick={() => onPageChange(1)}>\r\n              {\"|<\"}\r\n            </button>\r\n          </li>\r\n\r\n          {pages.map((page) => (\r\n            <li\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }\r\n              key={page}\r\n            >\r\n              <button\r\n                className=\"page-link\"\r\n                onClick={() => {\r\n                  onPageChange(page);\r\n                }}\r\n              >\r\n                {page}\r\n              </button>\r\n            </li>\r\n          ))}\r\n\r\n          <li className=\"page-item\">\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => onPageChange(totalPages)}\r\n            >\r\n              {\">|\"}\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","export function Paginate(\r\n  totalItems,\r\n  currentPage = 1,\r\n  pageSize = 10,\r\n  maxPages = 10\r\n) {\r\n  // calculate total pages\r\n  let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n  // ensure current page isn't out of range\r\n  if (currentPage < 1) {\r\n    currentPage = 1;\r\n  } else if (currentPage > totalPages) {\r\n    currentPage = totalPages;\r\n  }\r\n\r\n  let startPage: number, endPage: number;\r\n  if (totalPages <= maxPages) {\r\n    // total pages less than max so show all pages\r\n    startPage = 1;\r\n    endPage = totalPages;\r\n  } else {\r\n    // total pages more than max so calculate start and end pages\r\n    let maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\r\n    let maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\r\n    if (currentPage <= maxPagesBeforeCurrentPage) {\r\n      // current page near the start\r\n      startPage = 1;\r\n      endPage = maxPages;\r\n    } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\r\n      // current page near the end\r\n      startPage = totalPages - maxPages + 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      // current page somewhere in the middle\r\n      startPage = currentPage - maxPagesBeforeCurrentPage;\r\n      endPage = currentPage + maxPagesAfterCurrentPage;\r\n    }\r\n  }\r\n\r\n  // calculate start and end item indexes\r\n  let startIndex = (currentPage - 1) * pageSize;\r\n  let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n  // create an array of pages to ng-repeat in the pager control\r\n  let pages = Array.from(Array(endPage + 1 - startPage).keys()).map(\r\n    (i) => startPage + i\r\n  );\r\n\r\n  // return object with all pager properties required by the view\r\n  return {\r\n    totalItems: totalItems,\r\n    currentPage: currentPage,\r\n    pageSize: pageSize,\r\n    totalPages: totalPages,\r\n    startPage: startPage,\r\n    endPage: endPage,\r\n    startIndex: startIndex,\r\n    endIndex: endIndex,\r\n    pages: pages,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nclass VASReportResult extends Component {\r\n  state = {};\r\n\r\n  findAddrName(list, value) {\r\n    let q = list.find((b) => b.destnAddrValue === value);\r\n\r\n    if (q !== undefined) return q.destnAddrName;\r\n\r\n    return \"N/A\";\r\n  }\r\n\r\n  render() {\r\n    console.log(\"propsQQQ:\", this.props);\r\n\r\n    const {\r\n      data,\r\n      destnAddrMap,\r\n      totalItems,\r\n      pageIndex,\r\n      pageSize,\r\n      totalPages,\r\n      onPageChange,\r\n      onPageSizeChange,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div id=\"dvTotalItems\" className=\"row\">\r\n              <div className=\"col-8\">\r\n                ผลการค้นหา {Number(totalItems).toLocaleString()} รายการ\r\n              </div>\r\n\r\n              <div className=\"col-4 text-right\">\r\n                <label htmlFor=\"inputCity\">\r\n                  แสดงหน้าละ &nbsp;\r\n                  <select value={pageSize || \"\"} onChange={onPageSizeChange}>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"30\">30</option>\r\n                    <option value=\"40\">40</option>\r\n                    <option value=\"50\">50</option>\r\n                  </select>\r\n                  &nbsp; รายการ\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-1\"></div>\r\n\r\n            <table className=\"table table-sm table-striped\" id=\"tblResults\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Date and Time</th>\r\n                  <th scope=\"col\">Caller MO</th>\r\n                  <th scope=\"col\">Short Code</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((a, idx) => (\r\n                  <tr key={a.transactionId + \"_\" + idx}>\r\n                    <td>{a.deliveryTimeText}</td>\r\n                    <td>{a.originationAddress}</td>\r\n                    <td>{a.destinationAddress}</td>\r\n                    <td>\r\n                      {this.findAddrName(destnAddrMap, a.destinationAddress)}\r\n                    </td>\r\n                    <td>{a.messageStatus === 1 ? \"Success\" : \"Fail\"}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <Pagination\r\n              totalItems={totalItems}\r\n              activePage={pageIndex}\r\n              pageSize={pageSize}\r\n              totalPages={totalPages}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VASReportResult;\r\n","import React, { Component } from \"react\";\r\nimport VASReportCriteria from \"./VASReportCriteria\";\r\nimport VASReportResult from \"./VASReportResult\";\r\nimport DataService from \"../services/DataService\";\r\n\r\nclass VASReport extends Component {\r\n  state = {\r\n    query: {\r\n      vasType: this.props.vasType,\r\n      originationAddress: \"\",\r\n      destinationAddress: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      messageStatus: null,\r\n      pageSize: 20,\r\n    },\r\n    result: {\r\n      data: [],\r\n      totalItems: 0,\r\n      totalPages: 0,\r\n      pageIndex: -1,\r\n    },\r\n    destnAddrMap: [],\r\n  };\r\n\r\n  // static defaultProps = {\r\n  //   mode: \"Normal\",\r\n  //   vasType: \"USSD\",\r\n  // };\r\n\r\n  componentDidMount() {\r\n    this.initData();\r\n    this.fetchGetReport();\r\n  }\r\n\r\n  initData = async () => {\r\n    const q = { destnAddrType: this.props.vasType, pageSize: 100 };\r\n    let response = await DataService.GetDestnAddrMap(q);\r\n    this.setState({\r\n      destnAddrMap: response.data.data.filter((a) => a.destnAddrStatus === 1),\r\n    });\r\n  };\r\n\r\n  fetchGetReport = async (pageNumber = 1) => {\r\n    const { query } = this.state;\r\n    query.pageNumber = pageNumber;\r\n\r\n    try {\r\n      let response = await DataService.GetReport(query);\r\n      this.setState({ result: response.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleOriginationAddressChange = (e) => {\r\n    console.log(\"handleOriginationAddressChange\", e.target.value);\r\n    this.setState({\r\n      query: { ...this.state.query, originationAddress: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnDestinationAddressChange = (e) => {\r\n    console.log(\"handleOnDestinationAddressChange\", e.target.value);\r\n\r\n    this.setState({\r\n      query: { ...this.state.query, destinationAddress: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnStartDateChange = (e) => {\r\n    console.log(\"handleOnStartDateChange\", e.target.value);\r\n\r\n    this.setState({\r\n      query: { ...this.state.query, startDate: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnEndDateChange = (e) => {\r\n    console.log(\"handleOnEndDateChange\", e.target.value);\r\n\r\n    this.setState({\r\n      query: { ...this.state.query, endDate: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnMessageStatusChange = (e) => {\r\n    console.log(\"handleOnMessageStatusChange\", e.target.value);\r\n\r\n    this.setState({\r\n      query: { ...this.state.query, messageStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  handleOnPageSizeChange = (e) => {\r\n    console.log(\"handleOnPageSizeChange\", e.target.value);\r\n\r\n    this.setState({\r\n      query: { ...this.state.query, pageSize: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  handleOnSubmitQuery = (e) => {\r\n    this.fetchGetReport();\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnCancelClicked = (e) => {\r\n    this.setState({\r\n      query: {\r\n        vasType: this.props.vasType,\r\n        originationAddress: \"\",\r\n        destinationAddress: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        messageStatus: null,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOnPageChange = (pageNumber) => {\r\n    console.log(\"handleOnPageChange: \", pageNumber);\r\n    this.fetchGetReport(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <VASReportCriteria\r\n          query={this.state.query}\r\n          destnAddrMap={this.state.destnAddrMap}\r\n          onOriginationAddressChange={this.handleOriginationAddressChange}\r\n          onDestinationAddressChange={this.handleOnDestinationAddressChange}\r\n          onStartDateChange={this.handleOnStartDateChange}\r\n          onEndDateChange={this.handleOnEndDateChange}\r\n          onMessageStatusChange={this.handleOnMessageStatusChange}\r\n          onSubmitQuery={this.handleOnSubmitQuery}\r\n          onCancelClicked={this.handleOnCancelClicked}\r\n          mode={this.props.mode}\r\n          vasType={this.props.vasType}\r\n        />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <VASReportResult\r\n          data={this.state.result.data}\r\n          destnAddrMap={this.state.destnAddrMap}\r\n          totalItems={this.state.result.totalItems}\r\n          pageIndex={this.state.result.pageIndex}\r\n          pageSize={this.state.query.pageSize}\r\n          totalPages={this.state.result.totalPages}\r\n          onPageChange={this.handleOnPageChange}\r\n          onPageSizeChange={this.handleOnPageSizeChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VASReport;\r\n","import React, { Component } from \"react\";\r\nimport DataService from \"../services/DataService\";\r\n\r\nclass VASMngmtReport extends Component {\r\n  state = {\r\n    destnAddrMap: [],\r\n    query: {\r\n      vasType: this.props.vasType,\r\n      year: new Date().getFullYear().toString(),\r\n      destinationAddress: \"\",\r\n    },\r\n    result: {\r\n      destinationAddress: \"\",\r\n      data: [],\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initData();\r\n  }\r\n\r\n  initData = async () => {\r\n    const q = { destnAddrType: this.props.vasType, pageSize: 100 };\r\n    let response = await DataService.GetDestnAddrMap(q);\r\n    let data = response.data.data.filter((a) => a.destnAddrStatus === 1);\r\n\r\n    this.setState({ destnAddrMap: data });\r\n  };\r\n\r\n  fetchGetMngmtReport = async () => {\r\n    const { query } = this.state;\r\n\r\n    try {\r\n      let response = await DataService.GetMngmtReport(query);\r\n\r\n      let obj = this.state.destnAddrMap.find(\r\n        (a) => a.destnAddrValue === query.destinationAddress\r\n      );\r\n\r\n      this.setState({\r\n        result: {\r\n          data: response.data,\r\n          destinationAddress: obj.destnAddrName,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleOnSubmitQuery = (e) => {\r\n    this.fetchGetMngmtReport();\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnCancelClicked = (e) => {\r\n    this.setState({\r\n      query: {\r\n        vasType: this.props.vasType,\r\n        year: new Date().getFullYear().toString(),\r\n        destinationAddress: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOnYearChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, year: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnDestinationAddressChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, destinationAddress: e.target.value },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state.result;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {this.props.vasType} Management Report\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.handleOnSubmitQuery}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">ปี</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    value={this.state.query.year}\r\n                    onChange={this.handleOnYearChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">หมายเลขบริการ</label>\r\n\r\n                  <select\r\n                    className=\"form-control\"\r\n                    required={true}\r\n                    value={this.state.query.destinationAddress}\r\n                    onChange={this.handleOnDestinationAddressChange}\r\n                  >\r\n                    <option value=\"\" defaultValue>\r\n                      เลือก\r\n                    </option>\r\n                    {this.state.destnAddrMap.map((i) => (\r\n                      <option key={i.destnAddrId} value={i.destnAddrValue}>\r\n                        {i.destnAddrName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ค้นหา\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.handleOnCancelClicked}\r\n                  >\r\n                    ล้าง\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div id=\"dvTotalItems\">\r\n              ผลการค้นหา '{this.state.result.destinationAddress}'\r\n            </div>\r\n            <table className=\"table table-sm table-striped\" id=\"tblResults\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Month</th>\r\n                  <th scope=\"col\">Total Count</th>\r\n                  <th scope=\"col\">Success Count</th>\r\n                  <th scope=\"col\">Fail Count</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((a, index) => (\r\n                  <tr key={a.id}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{a.month}</td>\r\n                    <td>{a.totalCount}</td>\r\n                    <td>{a.successCount}</td>\r\n                    <td>{a.failCount}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VASMngmtReport;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DestnAddrMapListCriteria extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      query,\r\n      onNameChange,\r\n      onValueChange,\r\n      onStatusChange,\r\n      onSubmitQuery,\r\n      onCancelClicked,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {this.props.destnAddrType} Destination Address Setting\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={onSubmitQuery}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"Name\"\r\n                    value={query.destnAddrName}\r\n                    onChange={onNameChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Value</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"value\"\r\n                    value={query.destnAddrValue}\r\n                    onChange={onValueChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">Status</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={query.destnAddrStatus || \"\"}\r\n                    onChange={onStatusChange}\r\n                  >\r\n                    <option value=\"\">ทั้งหมด</option>\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group col-md-4\"></div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ค้นหา\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={onCancelClicked}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    ล้าง\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link\r\n                    to={`/${this.props.destnAddrType}DestnAddrMapAdd`}\r\n                    className=\"btn btn-success\"\r\n                  >\r\n                    สร้างใหม่\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DestnAddrMapListCriteria;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DestnAddrMapListResult extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      data,\r\n      totalItems,\r\n      pageIndex,\r\n      totalPages,\r\n      onPageChange,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div id=\"dvTotalItems\">\r\n              ผลการค้นหา {Number(totalItems).toLocaleString()} รายการ\r\n            </div>\r\n            <table className=\"table table-sm table-striped\" id=\"tblResults\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Value</th>\r\n                  {/* <th scope=\"col\">Created Date</th> */}\r\n                  {/* <th scope=\"col\">Created By</th> */}\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((a) => (\r\n                  <tr key={a.destnAddrId}>\r\n                    <td>{a.destnAddrName}</td>\r\n                    <td>{a.destnAddrValue}</td>\r\n                    {/* <td width=\"25%\">{a.createdDate}</td> */}\r\n                    {/* <td>{a.createdBy}</td> */}\r\n                    <td>{a.destnAddrStatus === 1 ? \"Active\" : \"Inactive\"}</td>\r\n                    <td width=\"15%\">\r\n                      <form method=\"post\" asp-action=\"Delete\">\r\n                        <Link\r\n                          to={\r\n                            `/${this.props.destnAddrType}DestnAddrMap/` +\r\n                            a.destnAddrId\r\n                          }\r\n                          className=\"btn-circle btn-sm btn-success\"\r\n                        >\r\n                          แก้ไข\r\n                        </Link>\r\n                        {/* &nbsp;\r\n                        <button\r\n                          className=\"btn-circle btn-sm btn-warning\"\r\n                          type=\"button\"\r\n                        >\r\n                          ลบ\r\n                        </button> */}\r\n                      </form>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <Pagination\r\n              totalItems={totalItems}\r\n              activePage={pageIndex}\r\n              totalPages={totalPages}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DestnAddrMapListResult;\r\n","import React, { Component } from \"react\";\r\nimport DestnAddrMapListCriteria from \"./DestnAddrMapListCriteria\";\r\nimport DestnAddrMapListResult from \"./DestnAddrMapListResult\";\r\nimport DataService from \"../services/DataService\";\r\n\r\nclass DestnAddrMapList extends Component {\r\n  state = {\r\n    query: {\r\n      destnAddrName: \"\",\r\n      destnAddrValue: \"\",\r\n      destnAddrStatus: null,\r\n      destnAddrType: this.props.destnAddrType,\r\n    },\r\n    result: {\r\n      data: [],\r\n      totalItems: 0,\r\n      totalPages: 0,\r\n      pageIndex: -1,\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetDestnAddrMap();\r\n  }\r\n\r\n  GetDestnAddrMap = async (pageNumber = 1) => {\r\n    const { query } = this.state;\r\n    query.pageNumber = pageNumber;\r\n\r\n    try {\r\n      let response = await DataService.GetDestnAddrMap(query);\r\n      console.log(\"response=\", response);\r\n      this.setState({ result: response.data });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  handleOnDestnAddrNameChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, destnAddrName: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnDestnAddrValueChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, destnAddrValue: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnStatusChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, destnAddrStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  handleOnSubmitQuery = (e) => {\r\n    this.GetDestnAddrMap();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnCancelClicked = (e) => {\r\n    this.setState({\r\n      query: {\r\n        destnAddrName: \"\",\r\n        destnAddrValue: \"\",\r\n        destnAddrStatus: null,\r\n        destnAddrType: this.props.destnAddrType,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOnPageChange = (pageNumber) => {\r\n    console.log(\"handleOnPageChange: \", pageNumber);\r\n    this.GetDestnAddrMap(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <DestnAddrMapListCriteria\r\n          destnAddrType={this.props.destnAddrType}\r\n          query={this.state.query}\r\n          onNameChange={this.handleOnDestnAddrNameChange}\r\n          onValueChange={this.handleOnDestnAddrValueChange}\r\n          onStatusChange={this.handleOnStatusChange}\r\n          onSubmitQuery={this.handleOnSubmitQuery}\r\n          onCancelClicked={this.handleOnCancelClicked}\r\n        />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <DestnAddrMapListResult\r\n          destnAddrType={this.props.destnAddrType}\r\n          data={this.state.result.data}\r\n          totalItems={this.state.result.totalItems}\r\n          pageIndex={this.state.result.pageIndex}\r\n          totalPages={this.state.result.totalPages}\r\n          onPageChange={this.handleOnPageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DestnAddrMapList;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DataService from \"../services/DataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DestnAddrMapEdit extends Component {\r\n  state = {\r\n    data: {\r\n      destnAddrId: null,\r\n      destnAddrName: \"\",\r\n      destnAddrValue: \"\",\r\n      destnAddrStatus: null,\r\n      destnAddrType: this.props.destnAddrType,\r\n      createdDate: \"\",\r\n      createdBy: 0,\r\n      updatedDate: \"\",\r\n      updatedBy: 0,\r\n    },\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetDestnAddrMap();\r\n  }\r\n\r\n  GetDestnAddrMap = async () => {\r\n    const response = await DataService.GetDestnAddrMapById(\r\n      this.props.match.params.id\r\n    );\r\n    console.log(\"response\", response);\r\n\r\n    this.setState({ data: response.data });\r\n  };\r\n\r\n  UpdateDestnAddrMap = async () => {\r\n    try {\r\n      const response = await DataService.UpdateDestnAddrMap(this.state.data);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({ message: \"Data was updated successfully\" });\r\n\r\n      this.props.history.push(`/${this.props.destnAddrType}DestnAddrMaps`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onSubmitData = (e) => {\r\n    this.UpdateDestnAddrMap();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  onNameChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrName: e.target.value },\r\n    });\r\n  };\r\n\r\n  onValueChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrValue: e.target.value },\r\n    });\r\n  };\r\n\r\n  onStatusChange = (e) => {\r\n    console.log(\"onStatusChange\", e.target.value);\r\n\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {this.props.destnAddrType} Destination Address - Edit\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmitData}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">{this.state.message}</div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.destnAddrName}\r\n                    onChange={this.onNameChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Value</label>\r\n                  <input\r\n                    required\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={data.destnAddrValue}\r\n                    onChange={this.onValueChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">สถานะ</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={data.destnAddrStatus}\r\n                    onChange={this.onStatusChange}\r\n                  >\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ยืนยัน\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link\r\n                    to={`/${this.props.destnAddrType}DestnAddrMaps`}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    ยกเลิก\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DestnAddrMapEdit;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DataService from \"../services/DataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DestnAddrMapAdd extends Component {\r\n  state = {\r\n    data: {\r\n      destnAddrId: null,\r\n      destnAddrName: \"\",\r\n      destnAddrValue: \"\",\r\n      destnAddrStatus: 1,\r\n      destnAddrType: this.props.destnAddrType,\r\n      createdDate: new Date(),\r\n      createdBy: 0,\r\n      updatedDate: new Date(),\r\n      updatedBy: 0,\r\n    },\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  UpdateDestnAddrMap = async () => {\r\n    try {\r\n      const response = await DataService.CreateDestnAddrMap(this.state.data);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({ message: \"Data created successfully\" });\r\n\r\n      this.props.history.push(`/${this.props.destnAddrType}DestnAddrMaps`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onSubmitData = (e) => {\r\n    this.UpdateDestnAddrMap();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  onNameChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrName: e.target.value },\r\n    });\r\n  };\r\n\r\n  onValueChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrValue: e.target.value },\r\n    });\r\n  };\r\n\r\n  onStatusChange = (e) => {\r\n    console.log(\"onStatusChange\", e.target.value);\r\n\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {this.props.destnAddrType} Destination Address - Add\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmitData}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">{this.state.message}</div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.destnAddrName}\r\n                    onChange={this.onNameChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Value</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={data.destnAddrValue}\r\n                    onChange={this.onValueChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">สถานะ</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={data.destnAddrStatus || \"\"}\r\n                    onChange={this.onStatusChange}\r\n                  >\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ยืนยัน\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link\r\n                    to={`/${this.props.destnAddrType}DestnAddrMaps`}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    ยกเลิก\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DestnAddrMapAdd;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserListCriteria extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      query,\r\n      onUserNameChange,\r\n      onUserGroupChange,\r\n      onUserStatusChange,\r\n      onSubmitQuery,\r\n      onCancelClicked,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">User Management</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={onSubmitQuery}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">User</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"Name\"\r\n                    value={query.userName}\r\n                    onChange={onUserNameChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Group</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={query.userGroup || \"\"}\r\n                    onChange={onUserGroupChange}\r\n                  >\r\n                    <option value=\"\">ทั้งหมด</option>\r\n                    <option value=\"Admin\">Admin</option>\r\n                    <option value=\"User\">User</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">Status</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={query.userStatus || \"\"}\r\n                    onChange={onUserStatusChange}\r\n                  >\r\n                    <option value=\"\">ทั้งหมด</option>\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group col-md-4\"></div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ค้นหา\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={onCancelClicked}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    ล้าง\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link to={\"UserAdd\"} className=\"btn btn-success\">\r\n                    สร้างใหม่\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserListCriteria;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserListResult extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      data,\r\n      totalItems,\r\n      pageIndex,\r\n      totalPages,\r\n      onPageChange,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div id=\"dvTotalItems\">\r\n              ผลการค้นหา {Number(totalItems).toLocaleString()} รายการ\r\n            </div>\r\n            <table className=\"table table-sm table-striped\" id=\"tblResults\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">User</th>\r\n                  <th scope=\"col\">Group</th>\r\n                  {/* <th scope=\"col\">Created Date</th> */}\r\n                  {/* <th scope=\"col\">Created By</th> */}\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((a) => (\r\n                  <tr key={a.userId}>\r\n                    <td>{a.userName}</td>\r\n                    <td>{a.userGroup}</td>\r\n                    {/* <td width=\"25%\">{a.createdDate}</td> */}\r\n                    {/* <td>{a.createdBy}</td> */}\r\n                    <td>{a.userStatus === 1 ? \"Active\" : \"Inactive\"}</td>\r\n                    <td width=\"15%\">\r\n                      <form method=\"post\" asp-action=\"Delete\">\r\n                        <Link\r\n                          to={`/User/` + a.userId}\r\n                          className=\"btn-circle btn-sm btn-success\"\r\n                        >\r\n                          แก้ไข\r\n                        </Link>\r\n                        {/* &nbsp;\r\n                        <button\r\n                          className=\"btn-circle btn-sm btn-warning\"\r\n                          type=\"button\"\r\n                        >\r\n                          ลบ\r\n                        </button> */}\r\n                      </form>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <Pagination\r\n              totalItems={totalItems}\r\n              activePage={pageIndex}\r\n              totalPages={totalPages}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserListResult;\r\n","import React, { Component } from \"react\";\r\nimport UserListCriteria from \"./UserListCriteria\";\r\nimport UserListResult from \"./UserListResult\";\r\nimport DataService from \"../services/DataService\";\r\n\r\nclass UserList extends Component {\r\n  state = {\r\n    query: {\r\n      userName: \"\",\r\n      userGroup: \"\",\r\n      userStatus: null,\r\n    },\r\n    result: {\r\n      data: [],\r\n      totalItems: 0,\r\n      totalPages: 0,\r\n      pageIndex: -1,\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetUser();\r\n  }\r\n\r\n  GetUser = async (pageNumber = 1) => {\r\n    const { query } = this.state;\r\n    query.pageNumber = pageNumber;\r\n\r\n    try {\r\n      let response = await DataService.GetUser(query);\r\n      console.log(\"response=\", response);\r\n      this.setState({ result: response.data });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  handleOnUserNameChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, userName: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnUserGroupChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, userGroup: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnUserStatusChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, userStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  handleOnSubmitQuery = (e) => {\r\n    this.GetUser();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnCancelClicked = (e) => {\r\n    this.setState({\r\n      query: {\r\n        userName: \"\",\r\n        userGroup: \"\",\r\n        userStatus: null,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOnPageChange = (pageNumber) => {\r\n    console.log(\"handleOnPageChange: \", pageNumber);\r\n    this.GetUser(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    if (this.props.requiredRole !== this.props.loggedUser.userGroup) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"text-center mt-5\">Permission Denied</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <UserListCriteria\r\n          query={this.state.query}\r\n          onUserNameChange={this.handleOnUserNameChange}\r\n          onUserGroupChange={this.handleOnUserGroupChange}\r\n          onUserStatusChange={this.handleOnUserStatusChange}\r\n          onSubmitQuery={this.handleOnSubmitQuery}\r\n          onCancelClicked={this.handleOnCancelClicked}\r\n        />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <UserListResult\r\n          data={this.state.result.data}\r\n          totalItems={this.state.result.totalItems}\r\n          pageIndex={this.state.result.pageIndex}\r\n          totalPages={this.state.result.totalPages}\r\n          onPageChange={this.handleOnPageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DataService from \"../services/DataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserEdit extends Component {\r\n  state = {\r\n    data: {\r\n      userId: -1,\r\n      userName: \"\",\r\n      userGroup: \"\",\r\n      userStatus: null,\r\n    },\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetUser();\r\n  }\r\n\r\n  GetUser = async () => {\r\n    const response = await DataService.GetUserById(this.props.match.params.id);\r\n    console.log(\"response\", response);\r\n\r\n    this.setState({ data: response.data });\r\n  };\r\n\r\n  UpdateUser = async () => {\r\n    try {\r\n      const response = await DataService.UpdateUser(this.state.data);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({ message: \"Data was updated successfully\" });\r\n\r\n      this.props.history.push(\"/Users\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onSubmitData = (e) => {\r\n    this.UpdateUser();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  onUserNameChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, userName: e.target.value },\r\n    });\r\n  };\r\n\r\n  onUserGroupChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, userGroup: e.target.value },\r\n    });\r\n  };\r\n\r\n  onUserStatusChange = (e) => {\r\n    console.log(\"onStatusChange\", e.target.value);\r\n\r\n    this.setState({\r\n      data: { ...this.state.data, userStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.requiredRole !== this.props.loggedUser.userGroup) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"text-center mt-5\">Permission Denied</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">{this.props.userType} User - Edit</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmitData}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">{this.state.message}</div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.userName}\r\n                    onChange={this.onUserNameChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Group</label>\r\n                  <select\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.userGroup || \"\"}\r\n                    onChange={this.onUserGroupChange}\r\n                  >\r\n                    <option value=\"\">เลือก</option>\r\n                    <option value=\"Admin\">Admin</option>\r\n                    <option value=\"User\">User</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">สถานะ</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={data.userStatus}\r\n                    onChange={this.onUserStatusChange}\r\n                  >\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ยืนยัน\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link\r\n                    to={`/UserChangePwd/${this.state.data.userId}`}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    Reset Password\r\n                  </Link>\r\n                  &nbsp; &nbsp;\r\n                  <Link to=\"/Users\" className=\"btn btn-secondary\">\r\n                    ยกเลิก\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserEdit;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DataService from \"../services/DataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserAdd extends Component {\r\n  state = {\r\n    data: {\r\n      userId: -1,\r\n      userName: \"\",\r\n      password: \"\",\r\n      userGroup: \"\",\r\n      userStatus: 1,\r\n    },\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  CreateUser = async () => {\r\n    try {\r\n      const response = await DataService.CreateUser(this.state.data);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({ message: \"Data created successfully\" });\r\n\r\n      this.props.history.push(\"/Users\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onSubmitData = (e) => {\r\n    this.CreateUser();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  onUserNameChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, userName: e.target.value },\r\n    });\r\n  };\r\n\r\n  onPasswordChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, password: e.target.value },\r\n    });\r\n  };\r\n\r\n  onUserGroupChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, userGroup: e.target.value },\r\n    });\r\n  };\r\n\r\n  onUserStatusChange = (e) => {\r\n    console.log(\"onStatusChange\", e.target.value);\r\n\r\n    this.setState({\r\n      data: { ...this.state.data, userStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.requiredRole !== this.props.loggedUser.userGroup) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"text-center mt-5\">Permission Denied</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">{this.props.userType} User - Add</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmitData}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">{this.state.message}</div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.userName}\r\n                    onChange={this.onUserNameChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.password}\r\n                    onChange={this.onPasswordChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Group</label>\r\n                  <select\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.userGroup || \"\"}\r\n                    onChange={this.onUserGroupChange}\r\n                  >\r\n                    <option value=\"\">เลือก</option>\r\n                    <option value=\"Admin\">Admin</option>\r\n                    <option value=\"User\">User</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">สถานะ</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={data.userStatus}\r\n                    onChange={this.onUserStatusChange}\r\n                  >\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ยืนยัน\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link to=\"/Users\" className=\"btn btn-secondary\">\r\n                    ยกเลิก\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserAdd;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Login extends Component {\r\n  state = { showPassword: false };\r\n\r\n  togglePassword = () => {\r\n    this.setState({ showPassword: !this.state.showPassword });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onSubmitLogin,\r\n      onUserNameChanged,\r\n      onPasswordChanged,\r\n      loggedUser,\r\n      loginResult,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div\r\n            style={{\r\n              width: \"500px\",\r\n              margin: \"100px auto\",\r\n            }}\r\n          >\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">TOT VAS System Report - Login</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={onSubmitLogin}>\r\n                  <div className=\"form-row justify-content-center\">\r\n                    <div className=\"form-group col-md-8\">\r\n                      <label htmlFor=\"inputState\">\r\n                        Username (Case Sensitive)\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={loggedUser.userName}\r\n                        onChange={onUserNameChanged}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-row justify-content-center\">\r\n                    <div className=\"form-group col-md-8\">\r\n                      <label htmlFor=\"inputState\">Password</label>\r\n                      <input\r\n                        type={this.state.showPassword ? \"text\" : \"password\"}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={loggedUser.password}\r\n                        onChange={onPasswordChanged}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row justify-content-center\">\r\n                    <div className=\"form-group col-md-8\">\r\n                      <label>\r\n                        <input type=\"checkbox\" onClick={this.togglePassword} />{\" \"}\r\n                        Show Password\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-12 text-center\">\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-12 text-center\">\r\n                      <span className=\"text-danger\">{loginResult}</span>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DataService from \"../services/DataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserChangePwd extends Component {\r\n  state = {\r\n    data: {\r\n      userId: -1,\r\n      userName: \"\",\r\n      userGroup: \"\",\r\n      userStatus: null,\r\n      password: \"\",\r\n    },\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    console.log(\"this.props.match.params.id\", this.props.match.params.id);\r\n    this.GetUserById(this.props.match.params.id);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"componentWillMount\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(\"componentWillReceiveProps\", nextProps);\r\n    this.GetUserById(nextProps.match.params.id);\r\n  }\r\n\r\n  GetUserById = async (id) => {\r\n    const response = await DataService.GetUserById(id);\r\n    console.log(\"response\", response);\r\n\r\n    this.setState({ data: response.data, message: \"\" });\r\n  };\r\n\r\n  ChangePasswordUser = async () => {\r\n    try {\r\n      const response = await DataService.ChangePasswordUser(this.state.data);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({ message: \"Password has been changed.\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onSubmitData = (e) => {\r\n    this.ChangePasswordUser();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  onPasswordChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, password: e.target.value },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      this.props.requiredRole !== this.props.loggedUser.userGroup &&\r\n      this.props.loggedUser.userId.toString() !==\r\n        this.props.match.params.id.toString()\r\n    ) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"text-center mt-5\">Permission Denied</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {this.props.userType} User - Change Password\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmitData}>\r\n              {this.state.message !== \"\" ? (\r\n                <div className=\"form-row justify-content-center\">\r\n                  <div className=\"form-group col-md-4\">\r\n                    {this.state.message}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <div className=\"form-row justify-content-center\">\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label htmlFor=\"inputState\">\r\n                        Please enter New Password for \"\r\n                        {this.state.data.userName}\"\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.data.password}\r\n                        onChange={this.onPasswordChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-12 text-center\">\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        ยืนยัน\r\n                      </button>\r\n                      &nbsp; &nbsp;\r\n                      <Link to=\"/\" className=\"btn btn-secondary\">\r\n                        ยกเลิก\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserChangePwd;\r\n","import React, { Component } from \"react\";\nimport { Route, HashRouter } from \"react-router-dom\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport Sidebar from \"./components/Sidebar\";\nimport Topbar from \"./components/Topbar\";\n\nimport VASReport from \"./components/VASReport\";\nimport VASMngmtReport from \"./components/VASMngmtReport\";\nimport DestnAddrMapList from \"./components/DestnAddrMapList\";\nimport DestnAddrMapEdit from \"./components/DestnAddrMapEdit\";\nimport DestnAddrMapAdd from \"./components/DestnAddrMapAdd\";\n\nimport UserList from \"./components/UserList\";\nimport UserEdit from \"./components/UserEdit\";\nimport UserAdd from \"./components/UserAdd\";\n\nimport Login from \"./components/Login\";\nimport DataService from \"./services/DataService\";\nimport UserChangePwd from \"./components/UserChangePwd\";\n\nclass App extends Component {\n  state = {\n    loggedUser: {\n      userId: parseInt(localStorage.getItem(\"lastLoggedUser.userId\")) || -1,\n      userName: localStorage.getItem(\"lastLoggedUser.userName\") || \"\",\n      password: \"\",\n      userGroup: localStorage.getItem(\"lastLoggedUser.userGroup\") || \"\",\n      userStatus: -1,\n    },\n    loginResult: localStorage.getItem(\"lastLoginResult\") || \"\",\n  };\n\n  login = async () => {\n    try {\n      const response = await DataService.UserLogin(this.state.loggedUser);\n      console.log(\"responseLogin\", response);\n\n      let loggedUser = response.data;\n\n      this.setState({ loggedUser: loggedUser, loginResult: \"LOGIN_OK\" });\n      localStorage.setItem(\"lastLoggedUser.userId\", loggedUser.userId);\n      localStorage.setItem(\"lastLoggedUser.userName\", loggedUser.userName);\n      localStorage.setItem(\"lastLoggedUser.userGroup\", loggedUser.userGroup);\n      localStorage.setItem(\"lastLoginResult\", \"LOGIN_OK\");\n\n      console.log(\"loggedUser\", this.state.loggedUser);\n    } catch (error) {\n      this.setState({ loginResult: \"Invalid Username or Password\" });\n      console.log(error);\n    }\n  };\n\n  logout = async () => {\n    this.setState({\n      loggedUser: {\n        userId: -1,\n        userName: \"\",\n        password: \"\",\n      },\n      loginResult: \"\",\n    });\n\n    localStorage.removeItem(\"lastLoggedUser.userId\");\n    localStorage.removeItem(\"lastLoggedUser.userName\");\n    localStorage.removeItem(\"lastLoggedUser.userGroup\");\n    localStorage.removeItem(\"lastLoginResult\");\n  };\n\n  onSubmitLogin = (e) => {\n    this.login();\n\n    e.preventDefault();\n  };\n\n  onLogoutClicked = (e) => {\n    this.logout();\n  };\n\n  onUserNameChanged = (e) => {\n    this.setState({\n      loggedUser: { ...this.state.loggedUser, userName: e.target.value },\n    });\n  };\n\n  onPasswordChanged = (e) => {\n    this.setState({\n      loggedUser: { ...this.state.loggedUser, password: e.target.value },\n    });\n  };\n\n  render() {\n    console.log(\n      \"lastLoggedUser.userName\",\n      localStorage.getItem(\"lastLoggedUser.userName\")\n    );\n    console.log(\"lastLoginResult\", localStorage.getItem(\"lastLoginResult\"));\n\n    if (this.state.loginResult !== \"LOGIN_OK\")\n      return (\n        <Login\n          loggedUser={this.state.loggedUser}\n          loginResult={this.state.loginResult}\n          onSubmitLogin={this.onSubmitLogin}\n          onUserNameChanged={this.onUserNameChanged}\n          onPasswordChanged={this.onPasswordChanged}\n        />\n      );\n\n    return (\n      <HashRouter>\n        <React.Fragment>\n          <Sidebar loggedUser={this.state.loggedUser} />\n\n          <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n            <div id=\"content\">\n              <Topbar\n                loggedUser={this.state.loggedUser}\n                onLogoutClicked={this.onLogoutClicked}\n              />\n\n              <div className=\"container-fluid\">\n                <div id=\"xxx\">\n                  <Route exact path=\"/\" component={Dashboard} />\n                  <Route path=\"/dashboard\" component={Dashboard} />\n\n                  <Route\n                    path=\"/USSDReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Normal\" vasType=\"USSD\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/USSDSystemReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Admin\" vasType=\"USSD\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/USSDMngmtReport\"\n                    render={(props) => (\n                      <VASMngmtReport {...props} vasType=\"USSD\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/USSDDestnAddrMaps\"\n                    render={(props) => (\n                      <DestnAddrMapList {...props} destnAddrType=\"USSD\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/USSDDestnAddrMap/:id\"\n                    render={(props) => (\n                      <DestnAddrMapEdit {...props} destnAddrType=\"USSD\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/USSDDestnAddrMapAdd\"\n                    render={(props) => (\n                      <DestnAddrMapAdd {...props} destnAddrType=\"USSD\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/IVRReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Normal\" vasType=\"IVR\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/IVRSystemReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Admin\" vasType=\"IVR\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/IVRMngmtReport\"\n                    render={(props) => (\n                      <VASMngmtReport {...props} vasType=\"IVR\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/IVRDestnAddrMaps\"\n                    render={(props) => (\n                      <DestnAddrMapList {...props} destnAddrType=\"IVR\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/IVRDestnAddrMap/:id\"\n                    render={(props) => (\n                      <DestnAddrMapEdit {...props} destnAddrType=\"IVR\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/IVRDestnAddrMapAdd\"\n                    render={(props) => (\n                      <DestnAddrMapAdd {...props} destnAddrType=\"IVR\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/MCNReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Normal\" vasType=\"MCN\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/MCNSystemReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Admin\" vasType=\"MCN\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/MCNMngmtReport\"\n                    render={(props) => (\n                      <VASMngmtReport {...props} vasType=\"MCN\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/MCNDestnAddrMaps\"\n                    render={(props) => (\n                      <DestnAddrMapList {...props} destnAddrType=\"MCN\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/MCNDestnAddrMap/:id\"\n                    render={(props) => (\n                      <DestnAddrMapEdit {...props} destnAddrType=\"MCN\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/MCNDestnAddrMapAdd\"\n                    render={(props) => (\n                      <DestnAddrMapAdd {...props} destnAddrType=\"MCN\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/Users\"\n                    render={(props) => (\n                      <UserList\n                        {...props}\n                        requiredRole=\"Admin\"\n                        loggedUser={this.state.loggedUser}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/User/:id\"\n                    render={(props) => (\n                      <UserEdit\n                        {...props}\n                        requiredRole=\"Admin\"\n                        loggedUser={this.state.loggedUser}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/UserAdd\"\n                    render={(props) => (\n                      <UserAdd\n                        {...props}\n                        requiredRole=\"Admin\"\n                        loggedUser={this.state.loggedUser}\n                      />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/UserChangePwd/:id\"\n                    render={(props) => (\n                      <UserChangePwd\n                        {...props}\n                        requiredRole=\"Admin\"\n                        loggedUser={this.state.loggedUser}\n                      />\n                    )}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <footer className=\"sticky-footer bg-white\">\n              <div className=\"container my-auto\">\n                <div className=\"copyright text-center my-auto\">\n                  <span>Copyright &copy; TOT 2020</span>\n                </div>\n              </div>\n            </footer>\n          </div>\n        </React.Fragment>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"wrapper\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["services/HttpCommon.js","services/DataService.js","components/DashboardItem.js","components/Dashboard.js","components/Sidebar.js","components/Topbar.js","components/VASReportCriteria.js","components/Pagination.js","helper/Paginate.js","components/VASReportResult.js","components/VASReport.js","components/VASMngmtReport.js","components/DestnAddrMapListCriteria.js","components/DestnAddrMapListResult.js","components/DestnAddrMapList.js","components/DestnAddrMapEdit.js","components/DestnAddrMapAdd.js","components/UserListCriteria.js","components/UserListResult.js","components/UserList.js","components/UserEdit.js","components/UserAdd.js","components/Login.js","components/UserChangePwd.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","UserLogin","q","a","http","post","GetUser","GetUserById","id","get","CreateUser","UpdateUser","ChangePasswordUser","DeleteUser","delete","GetDestnAddrMap","GetDestnAddrMapById","CreateDestnAddrMap","UpdateDestnAddrMap","DeleteDestnAddrMap","GetReport","vasType","GetMngmtReport","GetDashboardReport1","DashboardItem","state","query","props","year","Date","getFullYear","toString","month","messageStatus","data","labels","datasets","backgroundColor","hoverBackgroundColor","rawData","GetUSSDDashboardReport1","DataService","response","console","log","setState","map","destinationAddress","totalCount","handleOnYearChange","e","target","value","handleOnMonthChange","this","Fragment","className","onChange","type","required","scope","index","key","Component","Dashboard","Sidebar","to","src","alt","width","height","loggedUser","userId","userGroup","Topbar","onLogoutClicked","userName","onClick","VASReportCriteria","showCriteriaBox","toggleCriteriaBox","onOriginationAddressChange","onDestinationAddressChange","onStartDateChange","onEndDateChange","onMessageStatusChange","onMessageTypeChange","onSubmitQuery","onCancelClicked","destnAddrMap","data-toggle","href","onSubmit","htmlFor","name","originationAddress","mode","defaultValue","i","destnAddrId","destnAddrValue","destnAddrName","startDate","endDate","messageType","Pagination","totalItems","activePage","pageSize","onPageChange","startPage","endPage","currentPage","maxPages","totalPages","Math","ceil","maxPagesBeforeCurrentPage","floor","maxPagesAfterCurrentPage","startIndex","endIndex","min","pages","Array","from","keys","Paginate","length","aria-label","page","VASReportResult","list","find","b","undefined","pageIndex","onPageSizeChange","Number","toLocaleString","idx","transactionId","deliveryTimeText","findAddrName","internalMessageStatus","VASReport","result","initData","destnAddrType","filter","destnAddrStatus","fetchGetReport","pageNumber","handleOriginationAddressChange","handleOnDestinationAddressChange","handleOnStartDateChange","handleOnEndDateChange","handleOnMessageStatusChange","parseInt","handleOnMessageTypeChange","handleOnPageSizeChange","handleOnSubmitQuery","preventDefault","handleOnCancelClicked","handleOnPageChange","VASMngmtReport","fetchGetMngmtReport","obj","successCount","failCount","DestnAddrMapListCriteria","onNameChange","onValueChange","onStatusChange","DestnAddrMapListResult","method","asp-action","DestnAddrMapList","handleOnDestnAddrNameChange","handleOnDestnAddrValueChange","handleOnStatusChange","DestnAddrMapEdit","createdDate","createdBy","updatedDate","updatedBy","message","match","params","history","push","onSubmitData","DestnAddrMapAdd","UserListCriteria","onUserNameChange","onUserGroupChange","onUserStatusChange","userStatus","UserListResult","UserList","handleOnUserNameChange","handleOnUserGroupChange","handleOnUserStatusChange","requiredRole","UserEdit","userType","UserAdd","password","onPasswordChange","Login","showPassword","togglePassword","onSubmitLogin","onUserNameChanged","onPasswordChanged","loginResult","style","margin","UserChangePwd","nextProps","App","localStorage","getItem","login","setItem","logout","removeItem","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.774e9425.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  //baseURL: \"https://localhost:44384/api\",\r\n  //baseURL: \"http://172.27.1.16:11287/api\",\r\n  //baseURL: \"http://172.27.1.16:81/6dreportApi/api\",\r\n\r\n  //baseURL: \"http://localhost:11287/api\",\r\n  baseURL: \"http://dev.vasreport.totmobile.net:81/6dreportApi/api\",\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n","import http from \"./HttpCommon\";\r\n\r\nclass DataService {\r\n  UserLogin = async (q) => {\r\n    return http.post(\"/User/Login\", q);\r\n  };\r\n\r\n  GetUser = async (q) => {\r\n    return http.post(\"/User/GetUsers\", q);\r\n  };\r\n  GetUserById = async (id) => {\r\n    return http.get(`/User/GetUser/${id}`);\r\n  };\r\n  CreateUser = async (q) => {\r\n    return http.post(\"/User/Create\", q);\r\n  };\r\n  UpdateUser = async (q) => {\r\n    return http.post(\"/User/Update\", q);\r\n  };\r\n  ChangePasswordUser = async (q) => {\r\n    return http.post(\"/User/ChangePassword\", q);\r\n  };\r\n  DeleteUser = async (id) => {\r\n    return http.delete(`/User/Delete/${id}`);\r\n  };\r\n\r\n  GetDestnAddrMap = async (q) => {\r\n    return http.post(\"/DestnAddrMaps/GetDestnAddrMap\", q);\r\n  };\r\n  GetDestnAddrMapById = async (id) => {\r\n    return http.get(`/DestnAddrMaps/GetDestnAddrMap/${id}`);\r\n  };\r\n  CreateDestnAddrMap = async (q) => {\r\n    return http.post(\"/DestnAddrMaps/CreateDestnAddrMap\", q);\r\n  };\r\n  UpdateDestnAddrMap = async (q) => {\r\n    return http.post(\"/DestnAddrMaps/UpdateDestnAddrMap\", q);\r\n  };\r\n  DeleteDestnAddrMap = async (id) => {\r\n    return http.delete(`/DestnAddrMaps/DeleteDestnAddrMap/${id}`);\r\n  };\r\n\r\n  GetReport = async (q) => {\r\n    return http.post(`/${q.vasType}/GetReport`, q);\r\n  };\r\n  GetMngmtReport = async (q) => {\r\n    return http.post(`/${q.vasType}/GetMngmtReport`, q);\r\n  };\r\n  GetDashboardReport1 = async (q) => {\r\n    return http.post(`/${q.vasType}/GetDashboardReport1`, q);\r\n  };\r\n}\r\n\r\nexport default new DataService();\r\n","import React, { Component } from \"react\";\r\nimport DataService from \"../services/DataService\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nclass DashboardItem extends Component {\r\n  state = {\r\n    query: {\r\n      vasType: this.props.vasType,\r\n      year: new Date().getFullYear().toString(),\r\n      month: \"\",\r\n      messageStatus: this.props.messageStatus,\r\n    },\r\n\r\n    data: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          data: [],\r\n          backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#66d9ff\",\r\n            \"#ff66ff\",\r\n            \"#ffb366\",\r\n            \"#ff8c66\",\r\n            \"#66ffff\",\r\n            \"#d966ff\",\r\n            \"#ff66b3\",\r\n            \"#8cff66\",\r\n          ],\r\n          hoverBackgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#66d9ff\",\r\n            \"#ff66ff\",\r\n            \"#ffb366\",\r\n            \"#ff8c66\",\r\n            \"#66ffff\",\r\n            \"#d966ff\",\r\n            \"#ff66b3\",\r\n            \"#8cff66\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n\r\n    rawData: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetUSSDDashboardReport1();\r\n  }\r\n\r\n  GetUSSDDashboardReport1 = async () => {\r\n    const { query } = this.state;\r\n\r\n    try {\r\n      let response = await DataService.GetDashboardReport1(query);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({\r\n        data: {\r\n          labels: response.data.map((a) => a.destinationAddress),\r\n          datasets: [\r\n            {\r\n              data: response.data.map((a) => a.totalCount),\r\n            },\r\n          ],\r\n        },\r\n        rawData: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleOnYearChange = (e) => {\r\n    this.setState(\r\n      {\r\n        query: { ...this.state.query, year: e.target.value },\r\n      },\r\n      () => {\r\n        this.GetUSSDDashboardReport1();\r\n      }\r\n    );\r\n  };\r\n\r\n  handleOnMonthChange = (e) => {\r\n    this.setState(\r\n      {\r\n        query: { ...this.state.query, month: e.target.value },\r\n      },\r\n      () => {\r\n        this.GetUSSDDashboardReport1();\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            Dashboard - {this.props.vasType} {this.props.messageStatus}\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"containner\">\r\n              <dvi className=\"row mb-2\">\r\n                <div className=\"col-8\"></div>\r\n                <div className=\"col-4\">\r\n                  <dvi className=\"row align-items-center\">\r\n                    <div className=\"col-7\">\r\n                      <select\r\n                        onChange={this.handleOnMonthChange}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"\">ทุกเดือน</option>\r\n                        <option value=\"01\">มกราคม </option>\r\n                        <option value=\"02\">กุมภาพันธ์ </option>\r\n                        <option value=\"03\">มีนาคม </option>\r\n                        <option value=\"04\">เมษายน </option>\r\n                        <option value=\"05\">พฤษภาคม </option>\r\n                        <option value=\"06\">มิถุนายน </option>\r\n                        <option value=\"07\">กรกฎาคม </option>\r\n                        <option value=\"08\">สิงหาคม </option>\r\n                        <option value=\"09\">กันยายน </option>\r\n                        <option value=\"10\">ตุลาคม </option>\r\n                        <option value=\"11\">พฤศจิกายน </option>\r\n                        <option value=\"12\">ธันวาคม </option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-1\">ปี</div>\r\n\r\n                    <div className=\"col-4\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        required={true}\r\n                        value={this.state.query.year}\r\n                        onChange={this.handleOnYearChange}\r\n                      />\r\n                    </div>\r\n                  </dvi>\r\n                </div>\r\n              </dvi>\r\n              <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                  <Pie data={this.state.data} />\r\n                </div>\r\n                <div className=\"col\">\r\n                  <table\r\n                    className=\"table table-sm table-striped\"\r\n                    id=\"tblResults\"\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">Short Code</th>\r\n                        <th scope=\"col\">Total Count</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.rawData.map((a, index) => (\r\n                        <tr key={a.destinationAddress}>\r\n                          <td>{a.destinationAddress}</td>\r\n                          <td>{a.totalCount}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardItem;\r\n","import React, { Component } from \"react\";\r\nimport DashboardItem from \"./DashboardItem\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <DashboardItem vasType=\"USSD\" messageStatus=\"Success\" />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <DashboardItem vasType=\"USSD\" messageStatus=\"Fail\" />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <DashboardItem vasType=\"IVR\" messageStatus=\"Success\" />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <DashboardItem vasType=\"IVR\" messageStatus=\"Fail\" />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <DashboardItem vasType=\"MCN\" messageStatus=\"Success\" />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <DashboardItem vasType=\"MCN\" messageStatus=\"Fail\" />\r\n\r\n        <div className=\"mt-4\"></div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ul\r\n          className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"\r\n          id=\"accordionSidebar\"\r\n        >\r\n          <NavLink\r\n            to=\"/\"\r\n            className=\"sidebar-brand d-flex align-items-center justify-content-center\"\r\n          >\r\n            <div className=\"sidebar-brand-icon\">\r\n              <img\r\n                src=\"./img/crop-1574178163015.jpg\"\r\n                alt=\"TOT\"\r\n                width=\"60\"\r\n                height=\"60\"\r\n              />\r\n            </div>\r\n            <div className=\"sidebar-brand-text mx-3\">TOT Report</div>\r\n          </NavLink>\r\n\r\n          <hr className=\"sidebar-divider my-0\" />\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/Dashboard\">\r\n              <i className=\"fas fa-fw fa-tachometer-alt\"></i>\r\n              <span>Dashboard</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <hr className=\"sidebar-divider\" />\r\n\r\n          <div className=\"sidebar-heading\">USSD Report</div>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/USSDReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>USSD Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/USSDSystemReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>USSD System Report</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/USSDMngmtReport\">\r\n              <i className=\"fas fa-fw fa-chart-area\"></i>\r\n              <span>USSD Management Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/USSDDestnAddrMaps\">\r\n              <i className=\"fas fa-fw fa-cog\"></i>\r\n              <span>USSD Destination Setting</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <hr className=\"sidebar-divider\" />\r\n\r\n          <div className=\"sidebar-heading\">IVR Report</div>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/IVRReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>IVR Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/IVRSystemReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>IVR System Report</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/IVRMngmtReport\">\r\n              <i className=\"fas fa-fw fa-chart-area\"></i>\r\n              <span>IVR Management Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/IVRDestnAddrMaps\">\r\n              <i className=\"fas fa-fw fa-cog\"></i>\r\n              <span>IVR Destination Setting</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <hr className=\"sidebar-divider\" />\r\n\r\n          <div className=\"sidebar-heading\">MCN Report</div>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MCNReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>MCN Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MCNSystemReport\">\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>MCN System Report</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MCNMngmtReport\">\r\n              <i className=\"fas fa-fw fa-chart-area\"></i>\r\n              <span>MCN Management Report</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MCNDestnAddrMaps\">\r\n              <i className=\"fas fa-fw fa-cog\"></i>\r\n              <span>MCN Destination Setting</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <hr className=\"sidebar-divider\" />\r\n\r\n          <div className=\"sidebar-heading\">User Settings</div>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to={`/UserChangePwd/${this.props.loggedUser.userId}`}\r\n            >\r\n              <i className=\"fas fa-fw fa-table\"></i>\r\n              <span>Change Password</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          {this.props.loggedUser.userGroup === \"Admin\" && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/Users\">\r\n                  <i className=\"fas fa-fw fa-table\"></i>\r\n                  <span>Users</span>\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Topbar extends Component {\r\n  state = {};\r\n  render() {\r\n    const { loggedUser, onLogoutClicked } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <!-- Topbar --> */}\r\n        <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n          <button\r\n            id=\"sidebarToggleTop\"\r\n            className=\"btn btn-link d-md-none rounded-circle mr-3\"\r\n          >\r\n            <i className=\"fa fa-bars\"></i>\r\n          </button>\r\n\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <button className=\"dropdown-item\">\r\n              <i className=\"fas fa-user fa-sm fa-fw text-gray-400\"></i>\r\n              {loggedUser.userName}\r\n            </button>\r\n            <button className=\"dropdown-item\" onClick={onLogoutClicked}>\r\n              <i className=\"fas fa-sign-out-alt fa-sm fa-fw text-gray-400\"></i>\r\n              Logout\r\n            </button>\r\n          </ul>\r\n        </nav>\r\n        {/* <!-- End of Topbar --> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass VASReportCriteria extends Component {\r\n  state = { showCriteriaBox: false };\r\n\r\n  toggleCriteriaBox = () => {\r\n    this.setState({ showCriteriaBox: !this.state.showCriteriaBox });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      query,\r\n      onOriginationAddressChange,\r\n      onDestinationAddressChange,\r\n      onStartDateChange,\r\n      onEndDateChange,\r\n      onMessageStatusChange,\r\n      onMessageTypeChange,\r\n      onSubmitQuery,\r\n      onCancelClicked,\r\n    } = this.props;\r\n\r\n    const { destnAddrMap } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col-8\">\r\n                รายงาน Log การใช้งาน {this.props.vasType}\r\n              </div>\r\n              <div className=\"col-4 text-right\">\r\n                <a\r\n                  data-toggle=\"collapse\"\r\n                  href=\"#collapse1\"\r\n                  className=\"btn btn-sm\"\r\n                  onClick={() => {\r\n                    this.toggleCriteriaBox();\r\n                  }}\r\n                >\r\n                  <text>\r\n                    {this.state.showCriteriaBox ? \"[ Hide ]\" : \"[ Criteria ] \"}\r\n                  </text>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body collapse\" id=\"collapse1\">\r\n            <form onSubmit={onSubmitQuery}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">หมายเลข</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"OriginationAddress\"\r\n                    value={query.originationAddress}\r\n                    onChange={onOriginationAddressChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">หมายเลขบริการ</label>\r\n\r\n                  {this.props.mode === \"Normal\" ? (\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={query.destinationAddress}\r\n                      onChange={onDestinationAddressChange}\r\n                    >\r\n                      <option value=\"\" defaultValue>\r\n                        ทั้งหมด\r\n                      </option>\r\n                      {destnAddrMap.map((i) => (\r\n                        <option key={i.destnAddrId} value={i.destnAddrValue}>\r\n                          {i.destnAddrName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  ) : (\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"OriginationAddress\"\r\n                      value={query.destinationAddress}\r\n                      onChange={onDestinationAddressChange}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">วันที่เริ่มต้น</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    value={query.startDate}\r\n                    onChange={onStartDateChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">วันที่สิ้นสุด</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    value={query.endDate}\r\n                    onChange={onEndDateChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">สถานะ</label>\r\n                  <select\r\n                    value={query.messageStatus || \"\"}\r\n                    onChange={onMessageStatusChange}\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option value=\"\">ทั้งหมด</option>\r\n                    <option value=\"1\">Success</option>\r\n                    <option value=\"2\">Fail</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  {this.props.mode === \"Admin\" ? (\r\n                    <React.Fragment>\r\n                      <label htmlFor=\"inputCity\">Message Type</label>\r\n                      <select\r\n                        value={query.messageType || \"\"}\r\n                        onChange={onMessageTypeChange}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"\">ทั้งหมด</option>\r\n                        <option value=\"1\">Dial</option>\r\n                        <option value=\"4\">Detail</option>\r\n                      </select>\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ค้นหา\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={onCancelClicked}\r\n                  >\r\n                    ล้าง\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VASReportCriteria;\r\n","import React, { Component } from \"react\";\r\nimport { Paginate } from \"../helper/Paginate\";\r\n\r\nclass Pagination extends Component {\r\n  render() {\r\n    console.log(\"Pagination props\", this.props);\r\n\r\n    const { totalItems, activePage, pageSize, onPageChange } = this.props;\r\n\r\n    const { pages, currentPage, totalPages } = Paginate(\r\n      totalItems,\r\n      activePage,\r\n      pageSize\r\n    );\r\n\r\n    console.log(\"pages\", pages);\r\n    console.log(\"currentPage\", currentPage);\r\n    console.log(\"totalPages\", totalPages);\r\n\r\n    if (pages.length === 0 || totalPages < 2) return null;\r\n\r\n    return (\r\n      <nav aria-label=\"Page navigation\">\r\n        <ul className=\"pagination\" id=\"ulPagination\">\r\n          <li className=\"page-item\">\r\n            <button className=\"page-link\" onClick={() => onPageChange(1)}>\r\n              {\"|<\"}\r\n            </button>\r\n          </li>\r\n\r\n          {pages.map((page) => (\r\n            <li\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }\r\n              key={page}\r\n            >\r\n              <button\r\n                className=\"page-link\"\r\n                onClick={() => {\r\n                  onPageChange(page);\r\n                }}\r\n              >\r\n                {page}\r\n              </button>\r\n            </li>\r\n          ))}\r\n\r\n          <li className=\"page-item\">\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => onPageChange(totalPages)}\r\n            >\r\n              {\">|\"}\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","export function Paginate(\r\n  totalItems,\r\n  currentPage = 1,\r\n  pageSize = 10,\r\n  maxPages = 10\r\n) {\r\n  // calculate total pages\r\n  let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n  // ensure current page isn't out of range\r\n  if (currentPage < 1) {\r\n    currentPage = 1;\r\n  } else if (currentPage > totalPages) {\r\n    currentPage = totalPages;\r\n  }\r\n\r\n  let startPage: number, endPage: number;\r\n  if (totalPages <= maxPages) {\r\n    // total pages less than max so show all pages\r\n    startPage = 1;\r\n    endPage = totalPages;\r\n  } else {\r\n    // total pages more than max so calculate start and end pages\r\n    let maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\r\n    let maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\r\n    if (currentPage <= maxPagesBeforeCurrentPage) {\r\n      // current page near the start\r\n      startPage = 1;\r\n      endPage = maxPages;\r\n    } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\r\n      // current page near the end\r\n      startPage = totalPages - maxPages + 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      // current page somewhere in the middle\r\n      startPage = currentPage - maxPagesBeforeCurrentPage;\r\n      endPage = currentPage + maxPagesAfterCurrentPage;\r\n    }\r\n  }\r\n\r\n  // calculate start and end item indexes\r\n  let startIndex = (currentPage - 1) * pageSize;\r\n  let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n  // create an array of pages to ng-repeat in the pager control\r\n  let pages = Array.from(Array(endPage + 1 - startPage).keys()).map(\r\n    (i) => startPage + i\r\n  );\r\n\r\n  // return object with all pager properties required by the view\r\n  return {\r\n    totalItems: totalItems,\r\n    currentPage: currentPage,\r\n    pageSize: pageSize,\r\n    totalPages: totalPages,\r\n    startPage: startPage,\r\n    endPage: endPage,\r\n    startIndex: startIndex,\r\n    endIndex: endIndex,\r\n    pages: pages,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nclass VASReportResult extends Component {\r\n  state = {};\r\n\r\n  findAddrName(list, value) {\r\n    let q = list.find((b) => b.destnAddrValue === value);\r\n\r\n    if (q !== undefined) return q.destnAddrName;\r\n\r\n    return \"N/A\";\r\n  }\r\n\r\n  render() {\r\n    console.log(\"propsQQQ:\", this.props);\r\n\r\n    const {\r\n      data,\r\n      destnAddrMap,\r\n      totalItems,\r\n      pageIndex,\r\n      pageSize,\r\n      totalPages,\r\n      onPageChange,\r\n      onPageSizeChange,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div id=\"dvTotalItems\" className=\"row\">\r\n              <div className=\"col-8\">\r\n                ผลการค้นหา {Number(totalItems).toLocaleString()} รายการ\r\n              </div>\r\n\r\n              <div className=\"col-4 text-right\">\r\n                <label htmlFor=\"inputCity\">\r\n                  แสดงหน้าละ &nbsp;\r\n                  <select value={pageSize || \"\"} onChange={onPageSizeChange}>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"30\">30</option>\r\n                    <option value=\"50\">50</option>\r\n                    <option value=\"100\">100</option>\r\n                  </select>\r\n                  &nbsp; รายการ\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-1\"></div>\r\n\r\n            <table className=\"table table-sm table-striped\" id=\"tblResults\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Date and Time</th>\r\n                  <th scope=\"col\">Caller MO</th>\r\n                  <th scope=\"col\">Short Code</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((a, idx) => (\r\n                  <tr key={a.transactionId + \"_\" + idx}>\r\n                    <td>{a.deliveryTimeText}</td>\r\n                    <td>{a.originationAddress}</td>\r\n                    <td>{a.destinationAddress}</td>\r\n                    <td>\r\n                      {this.findAddrName(destnAddrMap, a.destinationAddress)}\r\n                    </td>\r\n                    <td>\r\n                      {a.messageStatus === 1 ? \"Success\" : \"Fail\"} [{\" \"}\r\n                      {a.internalMessageStatus} ]\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <Pagination\r\n              totalItems={totalItems}\r\n              activePage={pageIndex}\r\n              pageSize={pageSize}\r\n              totalPages={totalPages}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VASReportResult;\r\n","import React, { Component } from \"react\";\r\nimport VASReportCriteria from \"./VASReportCriteria\";\r\nimport VASReportResult from \"./VASReportResult\";\r\nimport DataService from \"../services/DataService\";\r\n\r\nclass VASReport extends Component {\r\n  state = {\r\n    query: {\r\n      vasType: this.props.vasType,\r\n      originationAddress: \"\",\r\n      destinationAddress: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      messageStatus: null,\r\n      messageType: this.props.mode === \"Normal\" ? 1 : null,\r\n      pageSize: 20,\r\n    },\r\n    result: {\r\n      data: [],\r\n      totalItems: 0,\r\n      totalPages: 0,\r\n      pageIndex: -1,\r\n    },\r\n    destnAddrMap: [],\r\n  };\r\n\r\n  // static defaultProps = {\r\n  //   mode: \"Normal\",\r\n  //   vasType: \"USSD\",\r\n  // };\r\n\r\n  componentDidMount() {\r\n    this.initData();\r\n    this.fetchGetReport();\r\n  }\r\n\r\n  initData = async () => {\r\n    const q = { destnAddrType: this.props.vasType, pageSize: 100 };\r\n    let response = await DataService.GetDestnAddrMap(q);\r\n    this.setState({\r\n      destnAddrMap: response.data.data.filter((a) => a.destnAddrStatus === 1),\r\n    });\r\n  };\r\n\r\n  fetchGetReport = async (pageNumber = 1) => {\r\n    const { query } = this.state;\r\n    query.pageNumber = pageNumber;\r\n\r\n    try {\r\n      let response = await DataService.GetReport(query);\r\n      this.setState({ result: response.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleOriginationAddressChange = (e) => {\r\n    console.log(\"handleOriginationAddressChange\", e.target.value);\r\n    this.setState({\r\n      query: { ...this.state.query, originationAddress: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnDestinationAddressChange = (e) => {\r\n    console.log(\"handleOnDestinationAddressChange\", e.target.value);\r\n\r\n    this.setState({\r\n      query: { ...this.state.query, destinationAddress: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnStartDateChange = (e) => {\r\n    console.log(\"handleOnStartDateChange\", e.target.value);\r\n\r\n    this.setState({\r\n      query: { ...this.state.query, startDate: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnEndDateChange = (e) => {\r\n    console.log(\"handleOnEndDateChange\", e.target.value);\r\n\r\n    this.setState({\r\n      query: { ...this.state.query, endDate: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnMessageStatusChange = (e) => {\r\n    console.log(\"handleOnMessageStatusChange\", e.target.value);\r\n\r\n    this.setState({\r\n      query: { ...this.state.query, messageStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  handleOnMessageTypeChange = (e) => {\r\n    console.log(\"handleOnMessageTypeChange\", e.target.value);\r\n\r\n    this.setState({\r\n      query: { ...this.state.query, messageType: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  handleOnPageSizeChange = (e) => {\r\n    console.log(\"handleOnPageSizeChange\", e.target.value);\r\n\r\n    this.setState(\r\n      {\r\n        query: { ...this.state.query, pageSize: parseInt(e.target.value) },\r\n      },\r\n      () => {\r\n        this.fetchGetReport();\r\n      }\r\n    );\r\n  };\r\n\r\n  handleOnSubmitQuery = (e) => {\r\n    this.fetchGetReport();\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnCancelClicked = (e) => {\r\n    this.setState({\r\n      query: {\r\n        vasType: this.props.vasType,\r\n        originationAddress: \"\",\r\n        destinationAddress: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        messageStatus: null,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOnPageChange = (pageNumber) => {\r\n    console.log(\"handleOnPageChange: \", pageNumber);\r\n    this.fetchGetReport(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <VASReportCriteria\r\n          query={this.state.query}\r\n          destnAddrMap={this.state.destnAddrMap}\r\n          onOriginationAddressChange={this.handleOriginationAddressChange}\r\n          onDestinationAddressChange={this.handleOnDestinationAddressChange}\r\n          onStartDateChange={this.handleOnStartDateChange}\r\n          onEndDateChange={this.handleOnEndDateChange}\r\n          onMessageStatusChange={this.handleOnMessageStatusChange}\r\n          onMessageTypeChange={this.handleOnMessageTypeChange}\r\n          onSubmitQuery={this.handleOnSubmitQuery}\r\n          onCancelClicked={this.handleOnCancelClicked}\r\n          mode={this.props.mode}\r\n          vasType={this.props.vasType}\r\n        />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <VASReportResult\r\n          data={this.state.result.data}\r\n          destnAddrMap={this.state.destnAddrMap}\r\n          totalItems={this.state.result.totalItems}\r\n          pageIndex={this.state.result.pageIndex}\r\n          pageSize={this.state.query.pageSize}\r\n          totalPages={this.state.result.totalPages}\r\n          onPageChange={this.handleOnPageChange}\r\n          onPageSizeChange={this.handleOnPageSizeChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VASReport;\r\n","import React, { Component } from \"react\";\r\nimport DataService from \"../services/DataService\";\r\n\r\nclass VASMngmtReport extends Component {\r\n  state = {\r\n    destnAddrMap: [],\r\n    query: {\r\n      vasType: this.props.vasType,\r\n      year: new Date().getFullYear().toString(),\r\n      destinationAddress: \"\",\r\n    },\r\n    result: {\r\n      destinationAddress: \"\",\r\n      data: [],\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initData();\r\n  }\r\n\r\n  initData = async () => {\r\n    const q = { destnAddrType: this.props.vasType, pageSize: 100 };\r\n    let response = await DataService.GetDestnAddrMap(q);\r\n    let data = response.data.data.filter((a) => a.destnAddrStatus === 1);\r\n\r\n    this.setState({ destnAddrMap: data });\r\n  };\r\n\r\n  fetchGetMngmtReport = async () => {\r\n    const { query } = this.state;\r\n\r\n    try {\r\n      let response = await DataService.GetMngmtReport(query);\r\n\r\n      let obj = this.state.destnAddrMap.find(\r\n        (a) => a.destnAddrValue === query.destinationAddress\r\n      );\r\n\r\n      this.setState({\r\n        result: {\r\n          data: response.data,\r\n          destinationAddress: obj.destnAddrName,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleOnSubmitQuery = (e) => {\r\n    this.fetchGetMngmtReport();\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnCancelClicked = (e) => {\r\n    this.setState({\r\n      query: {\r\n        vasType: this.props.vasType,\r\n        year: new Date().getFullYear().toString(),\r\n        destinationAddress: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOnYearChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, year: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnDestinationAddressChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, destinationAddress: e.target.value },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state.result;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {this.props.vasType} Management Report\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.handleOnSubmitQuery}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">ปี</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    value={this.state.query.year}\r\n                    onChange={this.handleOnYearChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">หมายเลขบริการ</label>\r\n\r\n                  <select\r\n                    className=\"form-control\"\r\n                    required={true}\r\n                    value={this.state.query.destinationAddress}\r\n                    onChange={this.handleOnDestinationAddressChange}\r\n                  >\r\n                    <option value=\"\" defaultValue>\r\n                      เลือก\r\n                    </option>\r\n                    {this.state.destnAddrMap.map((i) => (\r\n                      <option key={i.destnAddrId} value={i.destnAddrValue}>\r\n                        {i.destnAddrName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ค้นหา\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.handleOnCancelClicked}\r\n                  >\r\n                    ล้าง\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div id=\"dvTotalItems\">\r\n              ผลการค้นหา '{this.state.result.destinationAddress}'\r\n            </div>\r\n            <table className=\"table table-sm table-striped\" id=\"tblResults\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Month</th>\r\n                  <th scope=\"col\">Total Count</th>\r\n                  <th scope=\"col\">Success Count</th>\r\n                  <th scope=\"col\">Fail Count</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((a, index) => (\r\n                  <tr key={a.id}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{a.month}</td>\r\n                    <td>{a.totalCount}</td>\r\n                    <td>{a.successCount}</td>\r\n                    <td>{a.failCount}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VASMngmtReport;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DestnAddrMapListCriteria extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      query,\r\n      onNameChange,\r\n      onValueChange,\r\n      onStatusChange,\r\n      onSubmitQuery,\r\n      onCancelClicked,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {this.props.destnAddrType} Destination Address Setting\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={onSubmitQuery}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"Name\"\r\n                    value={query.destnAddrName}\r\n                    onChange={onNameChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Value</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"value\"\r\n                    value={query.destnAddrValue}\r\n                    onChange={onValueChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">Status</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={query.destnAddrStatus || \"\"}\r\n                    onChange={onStatusChange}\r\n                  >\r\n                    <option value=\"\">ทั้งหมด</option>\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group col-md-4\"></div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ค้นหา\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={onCancelClicked}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    ล้าง\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link\r\n                    to={`/${this.props.destnAddrType}DestnAddrMapAdd`}\r\n                    className=\"btn btn-success\"\r\n                  >\r\n                    สร้างใหม่\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DestnAddrMapListCriteria;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DestnAddrMapListResult extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      data,\r\n      totalItems,\r\n      pageIndex,\r\n      totalPages,\r\n      onPageChange,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div id=\"dvTotalItems\">\r\n              ผลการค้นหา {Number(totalItems).toLocaleString()} รายการ\r\n            </div>\r\n            <table className=\"table table-sm table-striped\" id=\"tblResults\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Value</th>\r\n                  {/* <th scope=\"col\">Created Date</th> */}\r\n                  {/* <th scope=\"col\">Created By</th> */}\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((a) => (\r\n                  <tr key={a.destnAddrId}>\r\n                    <td>{a.destnAddrName}</td>\r\n                    <td>{a.destnAddrValue}</td>\r\n                    {/* <td width=\"25%\">{a.createdDate}</td> */}\r\n                    {/* <td>{a.createdBy}</td> */}\r\n                    <td>{a.destnAddrStatus === 1 ? \"Active\" : \"Inactive\"}</td>\r\n                    <td width=\"15%\">\r\n                      <form method=\"post\" asp-action=\"Delete\">\r\n                        <Link\r\n                          to={\r\n                            `/${this.props.destnAddrType}DestnAddrMap/` +\r\n                            a.destnAddrId\r\n                          }\r\n                          className=\"btn-circle btn-sm btn-success\"\r\n                        >\r\n                          แก้ไข\r\n                        </Link>\r\n                        {/* &nbsp;\r\n                        <button\r\n                          className=\"btn-circle btn-sm btn-warning\"\r\n                          type=\"button\"\r\n                        >\r\n                          ลบ\r\n                        </button> */}\r\n                      </form>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <Pagination\r\n              totalItems={totalItems}\r\n              activePage={pageIndex}\r\n              totalPages={totalPages}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DestnAddrMapListResult;\r\n","import React, { Component } from \"react\";\r\nimport DestnAddrMapListCriteria from \"./DestnAddrMapListCriteria\";\r\nimport DestnAddrMapListResult from \"./DestnAddrMapListResult\";\r\nimport DataService from \"../services/DataService\";\r\n\r\nclass DestnAddrMapList extends Component {\r\n  state = {\r\n    query: {\r\n      destnAddrName: \"\",\r\n      destnAddrValue: \"\",\r\n      destnAddrStatus: null,\r\n      destnAddrType: this.props.destnAddrType,\r\n    },\r\n    result: {\r\n      data: [],\r\n      totalItems: 0,\r\n      totalPages: 0,\r\n      pageIndex: -1,\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetDestnAddrMap();\r\n  }\r\n\r\n  GetDestnAddrMap = async (pageNumber = 1) => {\r\n    const { query } = this.state;\r\n    query.pageNumber = pageNumber;\r\n\r\n    try {\r\n      let response = await DataService.GetDestnAddrMap(query);\r\n      console.log(\"response=\", response);\r\n      this.setState({ result: response.data });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  handleOnDestnAddrNameChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, destnAddrName: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnDestnAddrValueChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, destnAddrValue: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnStatusChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, destnAddrStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  handleOnSubmitQuery = (e) => {\r\n    this.GetDestnAddrMap();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnCancelClicked = (e) => {\r\n    this.setState({\r\n      query: {\r\n        destnAddrName: \"\",\r\n        destnAddrValue: \"\",\r\n        destnAddrStatus: null,\r\n        destnAddrType: this.props.destnAddrType,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOnPageChange = (pageNumber) => {\r\n    console.log(\"handleOnPageChange: \", pageNumber);\r\n    this.GetDestnAddrMap(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <DestnAddrMapListCriteria\r\n          destnAddrType={this.props.destnAddrType}\r\n          query={this.state.query}\r\n          onNameChange={this.handleOnDestnAddrNameChange}\r\n          onValueChange={this.handleOnDestnAddrValueChange}\r\n          onStatusChange={this.handleOnStatusChange}\r\n          onSubmitQuery={this.handleOnSubmitQuery}\r\n          onCancelClicked={this.handleOnCancelClicked}\r\n        />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <DestnAddrMapListResult\r\n          destnAddrType={this.props.destnAddrType}\r\n          data={this.state.result.data}\r\n          totalItems={this.state.result.totalItems}\r\n          pageIndex={this.state.result.pageIndex}\r\n          totalPages={this.state.result.totalPages}\r\n          onPageChange={this.handleOnPageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DestnAddrMapList;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DataService from \"../services/DataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DestnAddrMapEdit extends Component {\r\n  state = {\r\n    data: {\r\n      destnAddrId: null,\r\n      destnAddrName: \"\",\r\n      destnAddrValue: \"\",\r\n      destnAddrStatus: null,\r\n      destnAddrType: this.props.destnAddrType,\r\n      createdDate: \"\",\r\n      createdBy: 0,\r\n      updatedDate: \"\",\r\n      updatedBy: 0,\r\n    },\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetDestnAddrMap();\r\n  }\r\n\r\n  GetDestnAddrMap = async () => {\r\n    const response = await DataService.GetDestnAddrMapById(\r\n      this.props.match.params.id\r\n    );\r\n    console.log(\"response\", response);\r\n\r\n    this.setState({ data: response.data });\r\n  };\r\n\r\n  UpdateDestnAddrMap = async () => {\r\n    try {\r\n      const response = await DataService.UpdateDestnAddrMap(this.state.data);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({ message: \"Data was updated successfully\" });\r\n\r\n      this.props.history.push(`/${this.props.destnAddrType}DestnAddrMaps`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onSubmitData = (e) => {\r\n    this.UpdateDestnAddrMap();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  onNameChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrName: e.target.value },\r\n    });\r\n  };\r\n\r\n  onValueChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrValue: e.target.value },\r\n    });\r\n  };\r\n\r\n  onStatusChange = (e) => {\r\n    console.log(\"onStatusChange\", e.target.value);\r\n\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {this.props.destnAddrType} Destination Address - Edit\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmitData}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">{this.state.message}</div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.destnAddrName}\r\n                    onChange={this.onNameChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Value</label>\r\n                  <input\r\n                    required\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={data.destnAddrValue}\r\n                    onChange={this.onValueChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">สถานะ</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={data.destnAddrStatus}\r\n                    onChange={this.onStatusChange}\r\n                  >\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ยืนยัน\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link\r\n                    to={`/${this.props.destnAddrType}DestnAddrMaps`}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    ยกเลิก\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DestnAddrMapEdit;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DataService from \"../services/DataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DestnAddrMapAdd extends Component {\r\n  state = {\r\n    data: {\r\n      destnAddrId: null,\r\n      destnAddrName: \"\",\r\n      destnAddrValue: \"\",\r\n      destnAddrStatus: 1,\r\n      destnAddrType: this.props.destnAddrType,\r\n      createdDate: new Date(),\r\n      createdBy: 0,\r\n      updatedDate: new Date(),\r\n      updatedBy: 0,\r\n    },\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  UpdateDestnAddrMap = async () => {\r\n    try {\r\n      const response = await DataService.CreateDestnAddrMap(this.state.data);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({ message: \"Data created successfully\" });\r\n\r\n      this.props.history.push(`/${this.props.destnAddrType}DestnAddrMaps`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onSubmitData = (e) => {\r\n    this.UpdateDestnAddrMap();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  onNameChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrName: e.target.value },\r\n    });\r\n  };\r\n\r\n  onValueChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrValue: e.target.value },\r\n    });\r\n  };\r\n\r\n  onStatusChange = (e) => {\r\n    console.log(\"onStatusChange\", e.target.value);\r\n\r\n    this.setState({\r\n      data: { ...this.state.data, destnAddrStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {this.props.destnAddrType} Destination Address - Add\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmitData}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">{this.state.message}</div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.destnAddrName}\r\n                    onChange={this.onNameChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Value</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={data.destnAddrValue}\r\n                    onChange={this.onValueChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">สถานะ</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={data.destnAddrStatus || \"\"}\r\n                    onChange={this.onStatusChange}\r\n                  >\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ยืนยัน\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link\r\n                    to={`/${this.props.destnAddrType}DestnAddrMaps`}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    ยกเลิก\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DestnAddrMapAdd;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserListCriteria extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      query,\r\n      onUserNameChange,\r\n      onUserGroupChange,\r\n      onUserStatusChange,\r\n      onSubmitQuery,\r\n      onCancelClicked,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">User Management</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={onSubmitQuery}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">User</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"Name\"\r\n                    value={query.userName}\r\n                    onChange={onUserNameChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Group</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={query.userGroup || \"\"}\r\n                    onChange={onUserGroupChange}\r\n                  >\r\n                    <option value=\"\">ทั้งหมด</option>\r\n                    <option value=\"Admin\">Admin</option>\r\n                    <option value=\"User\">User</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">Status</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={query.userStatus || \"\"}\r\n                    onChange={onUserStatusChange}\r\n                  >\r\n                    <option value=\"\">ทั้งหมด</option>\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group col-md-4\"></div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ค้นหา\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={onCancelClicked}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    ล้าง\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link to={\"UserAdd\"} className=\"btn btn-success\">\r\n                    สร้างใหม่\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserListCriteria;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserListResult extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      data,\r\n      totalItems,\r\n      pageIndex,\r\n      totalPages,\r\n      onPageChange,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div id=\"dvTotalItems\">\r\n              ผลการค้นหา {Number(totalItems).toLocaleString()} รายการ\r\n            </div>\r\n            <table className=\"table table-sm table-striped\" id=\"tblResults\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">User</th>\r\n                  <th scope=\"col\">Group</th>\r\n                  {/* <th scope=\"col\">Created Date</th> */}\r\n                  {/* <th scope=\"col\">Created By</th> */}\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((a) => (\r\n                  <tr key={a.userId}>\r\n                    <td>{a.userName}</td>\r\n                    <td>{a.userGroup}</td>\r\n                    {/* <td width=\"25%\">{a.createdDate}</td> */}\r\n                    {/* <td>{a.createdBy}</td> */}\r\n                    <td>{a.userStatus === 1 ? \"Active\" : \"Inactive\"}</td>\r\n                    <td width=\"15%\">\r\n                      <form method=\"post\" asp-action=\"Delete\">\r\n                        <Link\r\n                          to={`/User/` + a.userId}\r\n                          className=\"btn-circle btn-sm btn-success\"\r\n                        >\r\n                          แก้ไข\r\n                        </Link>\r\n                        {/* &nbsp;\r\n                        <button\r\n                          className=\"btn-circle btn-sm btn-warning\"\r\n                          type=\"button\"\r\n                        >\r\n                          ลบ\r\n                        </button> */}\r\n                      </form>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <Pagination\r\n              totalItems={totalItems}\r\n              activePage={pageIndex}\r\n              totalPages={totalPages}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserListResult;\r\n","import React, { Component } from \"react\";\r\nimport UserListCriteria from \"./UserListCriteria\";\r\nimport UserListResult from \"./UserListResult\";\r\nimport DataService from \"../services/DataService\";\r\n\r\nclass UserList extends Component {\r\n  state = {\r\n    query: {\r\n      userName: \"\",\r\n      userGroup: \"\",\r\n      userStatus: null,\r\n    },\r\n    result: {\r\n      data: [],\r\n      totalItems: 0,\r\n      totalPages: 0,\r\n      pageIndex: -1,\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetUser();\r\n  }\r\n\r\n  GetUser = async (pageNumber = 1) => {\r\n    const { query } = this.state;\r\n    query.pageNumber = pageNumber;\r\n\r\n    try {\r\n      let response = await DataService.GetUser(query);\r\n      console.log(\"response=\", response);\r\n      this.setState({ result: response.data });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  handleOnUserNameChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, userName: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnUserGroupChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, userGroup: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleOnUserStatusChange = (e) => {\r\n    this.setState({\r\n      query: { ...this.state.query, userStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  handleOnSubmitQuery = (e) => {\r\n    this.GetUser();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnCancelClicked = (e) => {\r\n    this.setState({\r\n      query: {\r\n        userName: \"\",\r\n        userGroup: \"\",\r\n        userStatus: null,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOnPageChange = (pageNumber) => {\r\n    console.log(\"handleOnPageChange: \", pageNumber);\r\n    this.GetUser(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    if (this.props.requiredRole !== this.props.loggedUser.userGroup) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"text-center mt-5\">Permission Denied</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <UserListCriteria\r\n          query={this.state.query}\r\n          onUserNameChange={this.handleOnUserNameChange}\r\n          onUserGroupChange={this.handleOnUserGroupChange}\r\n          onUserStatusChange={this.handleOnUserStatusChange}\r\n          onSubmitQuery={this.handleOnSubmitQuery}\r\n          onCancelClicked={this.handleOnCancelClicked}\r\n        />\r\n\r\n        <div className=\"mt-4\"></div>\r\n\r\n        <UserListResult\r\n          data={this.state.result.data}\r\n          totalItems={this.state.result.totalItems}\r\n          pageIndex={this.state.result.pageIndex}\r\n          totalPages={this.state.result.totalPages}\r\n          onPageChange={this.handleOnPageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DataService from \"../services/DataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserEdit extends Component {\r\n  state = {\r\n    data: {\r\n      userId: -1,\r\n      userName: \"\",\r\n      userGroup: \"\",\r\n      userStatus: null,\r\n    },\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetUser();\r\n  }\r\n\r\n  GetUser = async () => {\r\n    const response = await DataService.GetUserById(this.props.match.params.id);\r\n    console.log(\"response\", response);\r\n\r\n    this.setState({ data: response.data });\r\n  };\r\n\r\n  UpdateUser = async () => {\r\n    try {\r\n      const response = await DataService.UpdateUser(this.state.data);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({ message: \"Data was updated successfully\" });\r\n\r\n      this.props.history.push(\"/Users\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onSubmitData = (e) => {\r\n    this.UpdateUser();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  onUserNameChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, userName: e.target.value },\r\n    });\r\n  };\r\n\r\n  onUserGroupChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, userGroup: e.target.value },\r\n    });\r\n  };\r\n\r\n  onUserStatusChange = (e) => {\r\n    console.log(\"onStatusChange\", e.target.value);\r\n\r\n    this.setState({\r\n      data: { ...this.state.data, userStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.requiredRole !== this.props.loggedUser.userGroup) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"text-center mt-5\">Permission Denied</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">{this.props.userType} User - Edit</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmitData}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">{this.state.message}</div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.userName}\r\n                    onChange={this.onUserNameChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Group</label>\r\n                  <select\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.userGroup || \"\"}\r\n                    onChange={this.onUserGroupChange}\r\n                  >\r\n                    <option value=\"\">เลือก</option>\r\n                    <option value=\"Admin\">Admin</option>\r\n                    <option value=\"User\">User</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">สถานะ</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={data.userStatus}\r\n                    onChange={this.onUserStatusChange}\r\n                  >\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ยืนยัน\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link\r\n                    to={`/UserChangePwd/${this.state.data.userId}`}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    Reset Password\r\n                  </Link>\r\n                  &nbsp; &nbsp;\r\n                  <Link to=\"/Users\" className=\"btn btn-secondary\">\r\n                    ยกเลิก\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserEdit;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DataService from \"../services/DataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserAdd extends Component {\r\n  state = {\r\n    data: {\r\n      userId: -1,\r\n      userName: \"\",\r\n      password: \"\",\r\n      userGroup: \"\",\r\n      userStatus: 1,\r\n    },\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  CreateUser = async () => {\r\n    try {\r\n      const response = await DataService.CreateUser(this.state.data);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({ message: \"Data created successfully\" });\r\n\r\n      this.props.history.push(\"/Users\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onSubmitData = (e) => {\r\n    this.CreateUser();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  onUserNameChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, userName: e.target.value },\r\n    });\r\n  };\r\n\r\n  onPasswordChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, password: e.target.value },\r\n    });\r\n  };\r\n\r\n  onUserGroupChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, userGroup: e.target.value },\r\n    });\r\n  };\r\n\r\n  onUserStatusChange = (e) => {\r\n    console.log(\"onStatusChange\", e.target.value);\r\n\r\n    this.setState({\r\n      data: { ...this.state.data, userStatus: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.requiredRole !== this.props.loggedUser.userGroup) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"text-center mt-5\">Permission Denied</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">{this.props.userType} User - Add</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmitData}>\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">{this.state.message}</div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.userName}\r\n                    onChange={this.onUserNameChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.password}\r\n                    onChange={this.onPasswordChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputState\">Group</label>\r\n                  <select\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.data.userGroup || \"\"}\r\n                    onChange={this.onUserGroupChange}\r\n                  >\r\n                    <option value=\"\">เลือก</option>\r\n                    <option value=\"Admin\">Admin</option>\r\n                    <option value=\"User\">User</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row justify-content-center\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label htmlFor=\"inputCity\">สถานะ</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={data.userStatus}\r\n                    onChange={this.onUserStatusChange}\r\n                  >\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"2\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-12 text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    ยืนยัน\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <Link to=\"/Users\" className=\"btn btn-secondary\">\r\n                    ยกเลิก\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserAdd;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Login extends Component {\r\n  state = { showPassword: false };\r\n\r\n  togglePassword = () => {\r\n    this.setState({ showPassword: !this.state.showPassword });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onSubmitLogin,\r\n      onUserNameChanged,\r\n      onPasswordChanged,\r\n      loggedUser,\r\n      loginResult,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div\r\n            style={{\r\n              width: \"500px\",\r\n              margin: \"100px auto\",\r\n            }}\r\n          >\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">TOT VAS System Report - Login</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={onSubmitLogin}>\r\n                  <div className=\"form-row justify-content-center\">\r\n                    <div className=\"form-group col-md-8\">\r\n                      <label htmlFor=\"inputState\">\r\n                        Username (Case Sensitive)\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={loggedUser.userName}\r\n                        onChange={onUserNameChanged}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-row justify-content-center\">\r\n                    <div className=\"form-group col-md-8\">\r\n                      <label htmlFor=\"inputState\">Password</label>\r\n                      <input\r\n                        type={this.state.showPassword ? \"text\" : \"password\"}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={loggedUser.password}\r\n                        onChange={onPasswordChanged}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row justify-content-center\">\r\n                    <div className=\"form-group col-md-8\">\r\n                      <label>\r\n                        <input type=\"checkbox\" onClick={this.togglePassword} />{\" \"}\r\n                        Show Password\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-12 text-center\">\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-12 text-center\">\r\n                      <span className=\"text-danger\">{loginResult}</span>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DataService from \"../services/DataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserChangePwd extends Component {\r\n  state = {\r\n    data: {\r\n      userId: -1,\r\n      userName: \"\",\r\n      userGroup: \"\",\r\n      userStatus: null,\r\n      password: \"\",\r\n    },\r\n    message: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    console.log(\"this.props.match.params.id\", this.props.match.params.id);\r\n    this.GetUserById(this.props.match.params.id);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"componentWillMount\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(\"componentWillReceiveProps\", nextProps);\r\n    this.GetUserById(nextProps.match.params.id);\r\n  }\r\n\r\n  GetUserById = async (id) => {\r\n    const response = await DataService.GetUserById(id);\r\n    console.log(\"response\", response);\r\n\r\n    this.setState({ data: response.data, message: \"\" });\r\n  };\r\n\r\n  ChangePasswordUser = async () => {\r\n    try {\r\n      const response = await DataService.ChangePasswordUser(this.state.data);\r\n      console.log(\"response\", response);\r\n\r\n      this.setState({ message: \"Password has been changed.\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onSubmitData = (e) => {\r\n    this.ChangePasswordUser();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  onPasswordChange = (e) => {\r\n    this.setState({\r\n      data: { ...this.state.data, password: e.target.value },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      this.props.requiredRole !== this.props.loggedUser.userGroup &&\r\n      this.props.loggedUser.userId.toString() !==\r\n        this.props.match.params.id.toString()\r\n    ) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"text-center mt-5\">Permission Denied</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {this.props.userType} User - Change Password\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmitData}>\r\n              {this.state.message !== \"\" ? (\r\n                <div className=\"form-row justify-content-center\">\r\n                  <div className=\"form-group col-md-4\">\r\n                    {this.state.message}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <div className=\"form-row justify-content-center\">\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label htmlFor=\"inputState\">\r\n                        Please enter New Password for \"\r\n                        {this.state.data.userName}\"\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.data.password}\r\n                        onChange={this.onPasswordChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-12 text-center\">\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        ยืนยัน\r\n                      </button>\r\n                      &nbsp; &nbsp;\r\n                      <Link to=\"/\" className=\"btn btn-secondary\">\r\n                        ยกเลิก\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserChangePwd;\r\n","import React, { Component } from \"react\";\nimport { Route, HashRouter } from \"react-router-dom\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport Sidebar from \"./components/Sidebar\";\nimport Topbar from \"./components/Topbar\";\n\nimport VASReport from \"./components/VASReport\";\nimport VASMngmtReport from \"./components/VASMngmtReport\";\nimport DestnAddrMapList from \"./components/DestnAddrMapList\";\nimport DestnAddrMapEdit from \"./components/DestnAddrMapEdit\";\nimport DestnAddrMapAdd from \"./components/DestnAddrMapAdd\";\n\nimport UserList from \"./components/UserList\";\nimport UserEdit from \"./components/UserEdit\";\nimport UserAdd from \"./components/UserAdd\";\n\nimport Login from \"./components/Login\";\nimport DataService from \"./services/DataService\";\nimport UserChangePwd from \"./components/UserChangePwd\";\n\nclass App extends Component {\n  state = {\n    loggedUser: {\n      userId: parseInt(localStorage.getItem(\"lastLoggedUser.userId\")) || -1,\n      userName: localStorage.getItem(\"lastLoggedUser.userName\") || \"\",\n      password: \"\",\n      userGroup: localStorage.getItem(\"lastLoggedUser.userGroup\") || \"\",\n      userStatus: -1,\n    },\n    loginResult: localStorage.getItem(\"lastLoginResult\") || \"\",\n  };\n\n  login = async () => {\n    try {\n      const response = await DataService.UserLogin(this.state.loggedUser);\n      console.log(\"responseLogin\", response);\n\n      let loggedUser = response.data;\n\n      this.setState({ loggedUser: loggedUser, loginResult: \"LOGIN_OK\" });\n      localStorage.setItem(\"lastLoggedUser.userId\", loggedUser.userId);\n      localStorage.setItem(\"lastLoggedUser.userName\", loggedUser.userName);\n      localStorage.setItem(\"lastLoggedUser.userGroup\", loggedUser.userGroup);\n      localStorage.setItem(\"lastLoginResult\", \"LOGIN_OK\");\n\n      console.log(\"loggedUser\", this.state.loggedUser);\n    } catch (error) {\n      this.setState({ loginResult: \"Invalid Username or Password\" });\n      console.log(error);\n    }\n  };\n\n  logout = async () => {\n    this.setState({\n      loggedUser: {\n        userId: -1,\n        userName: \"\",\n        password: \"\",\n      },\n      loginResult: \"\",\n    });\n\n    localStorage.removeItem(\"lastLoggedUser.userId\");\n    localStorage.removeItem(\"lastLoggedUser.userName\");\n    localStorage.removeItem(\"lastLoggedUser.userGroup\");\n    localStorage.removeItem(\"lastLoginResult\");\n  };\n\n  onSubmitLogin = (e) => {\n    this.login();\n\n    e.preventDefault();\n  };\n\n  onLogoutClicked = (e) => {\n    this.logout();\n  };\n\n  onUserNameChanged = (e) => {\n    this.setState({\n      loggedUser: { ...this.state.loggedUser, userName: e.target.value },\n    });\n  };\n\n  onPasswordChanged = (e) => {\n    this.setState({\n      loggedUser: { ...this.state.loggedUser, password: e.target.value },\n    });\n  };\n\n  render() {\n    console.log(\n      \"lastLoggedUser.userName\",\n      localStorage.getItem(\"lastLoggedUser.userName\")\n    );\n    console.log(\"lastLoginResult\", localStorage.getItem(\"lastLoginResult\"));\n\n    if (this.state.loginResult !== \"LOGIN_OK\")\n      return (\n        <Login\n          loggedUser={this.state.loggedUser}\n          loginResult={this.state.loginResult}\n          onSubmitLogin={this.onSubmitLogin}\n          onUserNameChanged={this.onUserNameChanged}\n          onPasswordChanged={this.onPasswordChanged}\n        />\n      );\n\n    return (\n      <HashRouter>\n        <React.Fragment>\n          <Sidebar loggedUser={this.state.loggedUser} />\n\n          <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n            <div id=\"content\">\n              <Topbar\n                loggedUser={this.state.loggedUser}\n                onLogoutClicked={this.onLogoutClicked}\n              />\n\n              <div className=\"container-fluid\">\n                <div id=\"xxx\">\n                  <Route exact path=\"/\" component={Dashboard} />\n                  <Route path=\"/dashboard\" component={Dashboard} />\n\n                  <Route\n                    path=\"/USSDReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Normal\" vasType=\"USSD\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/USSDSystemReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Admin\" vasType=\"USSD\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/USSDMngmtReport\"\n                    render={(props) => (\n                      <VASMngmtReport {...props} vasType=\"USSD\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/USSDDestnAddrMaps\"\n                    render={(props) => (\n                      <DestnAddrMapList {...props} destnAddrType=\"USSD\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/USSDDestnAddrMap/:id\"\n                    render={(props) => (\n                      <DestnAddrMapEdit {...props} destnAddrType=\"USSD\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/USSDDestnAddrMapAdd\"\n                    render={(props) => (\n                      <DestnAddrMapAdd {...props} destnAddrType=\"USSD\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/IVRReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Normal\" vasType=\"IVR\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/IVRSystemReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Admin\" vasType=\"IVR\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/IVRMngmtReport\"\n                    render={(props) => (\n                      <VASMngmtReport {...props} vasType=\"IVR\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/IVRDestnAddrMaps\"\n                    render={(props) => (\n                      <DestnAddrMapList {...props} destnAddrType=\"IVR\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/IVRDestnAddrMap/:id\"\n                    render={(props) => (\n                      <DestnAddrMapEdit {...props} destnAddrType=\"IVR\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/IVRDestnAddrMapAdd\"\n                    render={(props) => (\n                      <DestnAddrMapAdd {...props} destnAddrType=\"IVR\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/MCNReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Normal\" vasType=\"MCN\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/MCNSystemReport\"\n                    render={(props) => (\n                      <VASReport {...props} mode=\"Admin\" vasType=\"MCN\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/MCNMngmtReport\"\n                    render={(props) => (\n                      <VASMngmtReport {...props} vasType=\"MCN\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/MCNDestnAddrMaps\"\n                    render={(props) => (\n                      <DestnAddrMapList {...props} destnAddrType=\"MCN\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/MCNDestnAddrMap/:id\"\n                    render={(props) => (\n                      <DestnAddrMapEdit {...props} destnAddrType=\"MCN\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/MCNDestnAddrMapAdd\"\n                    render={(props) => (\n                      <DestnAddrMapAdd {...props} destnAddrType=\"MCN\" />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/Users\"\n                    render={(props) => (\n                      <UserList\n                        {...props}\n                        requiredRole=\"Admin\"\n                        loggedUser={this.state.loggedUser}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/User/:id\"\n                    render={(props) => (\n                      <UserEdit\n                        {...props}\n                        requiredRole=\"Admin\"\n                        loggedUser={this.state.loggedUser}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/UserAdd\"\n                    render={(props) => (\n                      <UserAdd\n                        {...props}\n                        requiredRole=\"Admin\"\n                        loggedUser={this.state.loggedUser}\n                      />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/UserChangePwd/:id\"\n                    render={(props) => (\n                      <UserChangePwd\n                        {...props}\n                        requiredRole=\"Admin\"\n                        loggedUser={this.state.loggedUser}\n                      />\n                    )}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <footer className=\"sticky-footer bg-white\">\n              <div className=\"container my-auto\">\n                <div className=\"copyright text-center my-auto\">\n                  <span>Copyright &copy; TOT 2020</span>\n                </div>\n              </div>\n            </footer>\n          </div>\n        </React.Fragment>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"wrapper\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}